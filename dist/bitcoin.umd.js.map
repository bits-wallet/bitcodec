{"version":3,"file":"bitcoin.umd.js","mappings":"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","sources":["webpack://[name]/./node_modules/@bitmatrix/int53/common.js","webpack://[name]/./node_modules/@bitmatrix/int53/index.js","webpack://[name]/./node_modules/@bitmatrix/int53/read.js","webpack://[name]/./node_modules/@bitmatrix/int53/write.js","webpack://[name]/./node_modules/base64-js/index.js","webpack://[name]/./node_modules/buffer/index.js","webpack://[name]/./node_modules/ieee754/index.js","webpack://[name]/./node_modules/ip/lib/ip.js","webpack://[name]/./node_modules/os-browserify/browser.js","webpack://[name]/./src/bitcoin/BooleanCodec.ts","webpack://[name]/./src/bitcoin/IpCodec.ts","webpack://[name]/./src/bitcoin/MessageCommandCodec.ts","webpack://[name]/./src/bitcoin/MessageHeaderCodec.ts","webpack://[name]/./src/bitcoin/TxCodec.ts","webpack://[name]/./src/bitcoin/VersionCodec.ts","webpack://[name]/./src/bitcoin/WitnessLocktimeCodec.ts","webpack://[name]/./src/bitcoin/converter.ts","webpack://[name]/./src/bitcoin/helper.ts","webpack://[name]/./src/bitcoin/someCodecs.ts","webpack://[name]/./src/index.ts","webpack://[name]/./src/lib/CAllBuffer.ts","webpack://[name]/./src/lib/CArray.ts","webpack://[name]/./src/lib/CBuffer.ts","webpack://[name]/./src/lib/CNumber.ts","webpack://[name]/./src/lib/CObject.ts","webpack://[name]/./src/lib/CString.ts","webpack://[name]/./src/lib/CVarArray.ts","webpack://[name]/./src/lib/CVarBuffer.ts","webpack://[name]/./src/lib/CVarString.ts","webpack://[name]/./src/lib/CVarUIntBitcoin.ts","webpack://[name]/./src/models/NumberTypes.ts","webpack://[name]/./src/util.ts","webpack://[name]/webpack/bootstrap","webpack://[name]/./src/bitcoin.ts"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.toDouble = exports.intHighLow = exports.uintHighLow = exports.onesComplement = exports.assert = exports.Int53Type = void 0;\nconst MAX_UINT32 = 0x00000000ffffffff;\nconst MAX_INT53 = 0x001fffffffffffff;\nvar Int53Type;\n(function (Int53Type) {\n    Int53Type[\"Int64BE\"] = \"Int64BE\";\n    Int53Type[\"Int64LE\"] = \"Int64LE\";\n    Int53Type[\"UInt64BE\"] = \"UInt64BE\";\n    Int53Type[\"UInt64LE\"] = \"UInt64LE\";\n})(Int53Type = exports.Int53Type || (exports.Int53Type = {}));\nconst assert = (test, message) => {\n    if (!test)\n        throw new Error(message);\n};\nexports.assert = assert;\nconst onesComplement = (number) => {\n    number = ~number;\n    if (number < 0) {\n        number = (number & 0x7fffffff) + 0x80000000;\n    }\n    return number;\n};\nexports.onesComplement = onesComplement;\nconst uintHighLow = (number) => {\n    (0, exports.assert)(number > -1 && number <= MAX_INT53, \"number out of range\");\n    (0, exports.assert)(Math.floor(number) === number, \"number must be an integer\");\n    var high = 0;\n    var signbit = number & 0xffffffff;\n    var low = signbit < 0 ? (number & 0x7fffffff) + 0x80000000 : signbit;\n    if (number > MAX_UINT32) {\n        high = (number - low) / (MAX_UINT32 + 1);\n    }\n    return [high, low];\n};\nexports.uintHighLow = uintHighLow;\nconst intHighLow = (number) => {\n    if (number > -1) {\n        return (0, exports.uintHighLow)(number);\n    }\n    var hl = (0, exports.uintHighLow)(-number);\n    var high = (0, exports.onesComplement)(hl[0]);\n    var low = (0, exports.onesComplement)(hl[1]);\n    if (low === MAX_UINT32) {\n        high += 1;\n        low = 0;\n    }\n    else {\n        low += 1;\n    }\n    return [high, low];\n};\nexports.intHighLow = intHighLow;\nconst toDouble = (high, low, signed) => {\n    if (signed && (high & 0x80000000) !== 0) {\n        high = (0, exports.onesComplement)(high);\n        low = (0, exports.onesComplement)(low);\n        (0, exports.assert)(high < 0x00200000, \"number too small\");\n        return -(high * (MAX_UINT32 + 1) + low + 1);\n    }\n    else {\n        //positive\n        (0, exports.assert)(high < 0x00200000, \"number too large\");\n        return high * (MAX_UINT32 + 1) + low;\n    }\n};\nexports.toDouble = toDouble;\n//# sourceMappingURL=common.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.readInt53 = exports.writeInt53 = exports.Int53Type = void 0;\nvar common_1 = require(\"./common\");\nObject.defineProperty(exports, \"Int53Type\", { enumerable: true, get: function () { return common_1.Int53Type; } });\nvar write_1 = require(\"./write\");\nObject.defineProperty(exports, \"writeInt53\", { enumerable: true, get: function () { return write_1.write; } });\nvar read_1 = require(\"./read\");\nObject.defineProperty(exports, \"readInt53\", { enumerable: true, get: function () { return read_1.read; } });\n//# sourceMappingURL=index.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.read = void 0;\nconst common_1 = require(\"./common\");\nconst read = (int53Type, buffer, offset = 0) => {\n    const BE = int53Type.endsWith(\"BE\");\n    const [high, low] = BE ? [buffer.readUInt32BE(offset), buffer.readUInt32BE(offset + 4)] : [buffer.readUInt32LE(offset + 4), buffer.readUInt32LE(offset)];\n    const signed = int53Type.startsWith(\"Int\");\n    return (0, common_1.toDouble)(high, low, signed);\n};\nexports.read = read;\n//# sourceMappingURL=read.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.write = void 0;\nconst common_1 = require(\"./common\");\nconst write = (int53Type, number, buffer, offset = 0) => {\n    const signed = int53Type.startsWith(\"Int\");\n    const hl = signed ? (0, common_1.intHighLow)(number) : (0, common_1.uintHighLow)(number);\n    const BE = int53Type.endsWith(\"BE\");\n    if (BE) {\n        buffer.writeUInt32BE(hl[0], offset);\n        buffer.writeUInt32BE(hl[1], offset + 4);\n    }\n    else {\n        buffer.writeUInt32LE(hl[1], offset);\n        buffer.writeUInt32LE(hl[0], offset + 4);\n    }\n};\nexports.write = write;\n//# sourceMappingURL=write.js.map","'use strict'\n\nexports.byteLength = byteLength\nexports.toByteArray = toByteArray\nexports.fromByteArray = fromByteArray\n\nvar lookup = []\nvar revLookup = []\nvar Arr = typeof Uint8Array !== 'undefined' ? Uint8Array : Array\n\nvar code = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'\nfor (var i = 0, len = code.length; i < len; ++i) {\n  lookup[i] = code[i]\n  revLookup[code.charCodeAt(i)] = i\n}\n\n// Support decoding URL-safe base64 strings, as Node.js does.\n// See: https://en.wikipedia.org/wiki/Base64#URL_applications\nrevLookup['-'.charCodeAt(0)] = 62\nrevLookup['_'.charCodeAt(0)] = 63\n\nfunction getLens (b64) {\n  var len = b64.length\n\n  if (len % 4 > 0) {\n    throw new Error('Invalid string. Length must be a multiple of 4')\n  }\n\n  // Trim off extra bytes after placeholder bytes are found\n  // See: https://github.com/beatgammit/base64-js/issues/42\n  var validLen = b64.indexOf('=')\n  if (validLen === -1) validLen = len\n\n  var placeHoldersLen = validLen === len\n    ? 0\n    : 4 - (validLen % 4)\n\n  return [validLen, placeHoldersLen]\n}\n\n// base64 is 4/3 + up to two characters of the original data\nfunction byteLength (b64) {\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction _byteLength (b64, validLen, placeHoldersLen) {\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction toByteArray (b64) {\n  var tmp\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n\n  var arr = new Arr(_byteLength(b64, validLen, placeHoldersLen))\n\n  var curByte = 0\n\n  // if there are placeholders, only get up to the last complete 4 chars\n  var len = placeHoldersLen > 0\n    ? validLen - 4\n    : validLen\n\n  var i\n  for (i = 0; i < len; i += 4) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 18) |\n      (revLookup[b64.charCodeAt(i + 1)] << 12) |\n      (revLookup[b64.charCodeAt(i + 2)] << 6) |\n      revLookup[b64.charCodeAt(i + 3)]\n    arr[curByte++] = (tmp >> 16) & 0xFF\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 2) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 2) |\n      (revLookup[b64.charCodeAt(i + 1)] >> 4)\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 1) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 10) |\n      (revLookup[b64.charCodeAt(i + 1)] << 4) |\n      (revLookup[b64.charCodeAt(i + 2)] >> 2)\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  return arr\n}\n\nfunction tripletToBase64 (num) {\n  return lookup[num >> 18 & 0x3F] +\n    lookup[num >> 12 & 0x3F] +\n    lookup[num >> 6 & 0x3F] +\n    lookup[num & 0x3F]\n}\n\nfunction encodeChunk (uint8, start, end) {\n  var tmp\n  var output = []\n  for (var i = start; i < end; i += 3) {\n    tmp =\n      ((uint8[i] << 16) & 0xFF0000) +\n      ((uint8[i + 1] << 8) & 0xFF00) +\n      (uint8[i + 2] & 0xFF)\n    output.push(tripletToBase64(tmp))\n  }\n  return output.join('')\n}\n\nfunction fromByteArray (uint8) {\n  var tmp\n  var len = uint8.length\n  var extraBytes = len % 3 // if we have 1 byte left, pad 2 bytes\n  var parts = []\n  var maxChunkLength = 16383 // must be multiple of 3\n\n  // go through the array every three bytes, we'll deal with trailing stuff later\n  for (var i = 0, len2 = len - extraBytes; i < len2; i += maxChunkLength) {\n    parts.push(encodeChunk(uint8, i, (i + maxChunkLength) > len2 ? len2 : (i + maxChunkLength)))\n  }\n\n  // pad the end with zeros, but make sure to not forget the extra bytes\n  if (extraBytes === 1) {\n    tmp = uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 2] +\n      lookup[(tmp << 4) & 0x3F] +\n      '=='\n    )\n  } else if (extraBytes === 2) {\n    tmp = (uint8[len - 2] << 8) + uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 10] +\n      lookup[(tmp >> 4) & 0x3F] +\n      lookup[(tmp << 2) & 0x3F] +\n      '='\n    )\n  }\n\n  return parts.join('')\n}\n","/*!\n * The buffer module from node.js, for the browser.\n *\n * @author   Feross Aboukhadijeh <https://feross.org>\n * @license  MIT\n */\n/* eslint-disable no-proto */\n\n'use strict'\n\nconst base64 = require('base64-js')\nconst ieee754 = require('ieee754')\nconst customInspectSymbol =\n  (typeof Symbol === 'function' && typeof Symbol['for'] === 'function') // eslint-disable-line dot-notation\n    ? Symbol['for']('nodejs.util.inspect.custom') // eslint-disable-line dot-notation\n    : null\n\nexports.Buffer = Buffer\nexports.SlowBuffer = SlowBuffer\nexports.INSPECT_MAX_BYTES = 50\n\nconst K_MAX_LENGTH = 0x7fffffff\nexports.kMaxLength = K_MAX_LENGTH\n\n/**\n * If `Buffer.TYPED_ARRAY_SUPPORT`:\n *   === true    Use Uint8Array implementation (fastest)\n *   === false   Print warning and recommend using `buffer` v4.x which has an Object\n *               implementation (most compatible, even IE6)\n *\n * Browsers that support typed arrays are IE 10+, Firefox 4+, Chrome 7+, Safari 5.1+,\n * Opera 11.6+, iOS 4.2+.\n *\n * We report that the browser does not support typed arrays if the are not subclassable\n * using __proto__. Firefox 4-29 lacks support for adding new properties to `Uint8Array`\n * (See: https://bugzilla.mozilla.org/show_bug.cgi?id=695438). IE 10 lacks support\n * for __proto__ and has a buggy typed array implementation.\n */\nBuffer.TYPED_ARRAY_SUPPORT = typedArraySupport()\n\nif (!Buffer.TYPED_ARRAY_SUPPORT && typeof console !== 'undefined' &&\n    typeof console.error === 'function') {\n  console.error(\n    'This browser lacks typed array (Uint8Array) support which is required by ' +\n    '`buffer` v5.x. Use `buffer` v4.x if you require old browser support.'\n  )\n}\n\nfunction typedArraySupport () {\n  // Can typed array instances can be augmented?\n  try {\n    const arr = new Uint8Array(1)\n    const proto = { foo: function () { return 42 } }\n    Object.setPrototypeOf(proto, Uint8Array.prototype)\n    Object.setPrototypeOf(arr, proto)\n    return arr.foo() === 42\n  } catch (e) {\n    return false\n  }\n}\n\nObject.defineProperty(Buffer.prototype, 'parent', {\n  enumerable: true,\n  get: function () {\n    if (!Buffer.isBuffer(this)) return undefined\n    return this.buffer\n  }\n})\n\nObject.defineProperty(Buffer.prototype, 'offset', {\n  enumerable: true,\n  get: function () {\n    if (!Buffer.isBuffer(this)) return undefined\n    return this.byteOffset\n  }\n})\n\nfunction createBuffer (length) {\n  if (length > K_MAX_LENGTH) {\n    throw new RangeError('The value \"' + length + '\" is invalid for option \"size\"')\n  }\n  // Return an augmented `Uint8Array` instance\n  const buf = new Uint8Array(length)\n  Object.setPrototypeOf(buf, Buffer.prototype)\n  return buf\n}\n\n/**\n * The Buffer constructor returns instances of `Uint8Array` that have their\n * prototype changed to `Buffer.prototype`. Furthermore, `Buffer` is a subclass of\n * `Uint8Array`, so the returned instances will have all the node `Buffer` methods\n * and the `Uint8Array` methods. Square bracket notation works as expected -- it\n * returns a single octet.\n *\n * The `Uint8Array` prototype remains unmodified.\n */\n\nfunction Buffer (arg, encodingOrOffset, length) {\n  // Common case.\n  if (typeof arg === 'number') {\n    if (typeof encodingOrOffset === 'string') {\n      throw new TypeError(\n        'The \"string\" argument must be of type string. Received type number'\n      )\n    }\n    return allocUnsafe(arg)\n  }\n  return from(arg, encodingOrOffset, length)\n}\n\nBuffer.poolSize = 8192 // not used by this implementation\n\nfunction from (value, encodingOrOffset, length) {\n  if (typeof value === 'string') {\n    return fromString(value, encodingOrOffset)\n  }\n\n  if (ArrayBuffer.isView(value)) {\n    return fromArrayView(value)\n  }\n\n  if (value == null) {\n    throw new TypeError(\n      'The first argument must be one of type string, Buffer, ArrayBuffer, Array, ' +\n      'or Array-like Object. Received type ' + (typeof value)\n    )\n  }\n\n  if (isInstance(value, ArrayBuffer) ||\n      (value && isInstance(value.buffer, ArrayBuffer))) {\n    return fromArrayBuffer(value, encodingOrOffset, length)\n  }\n\n  if (typeof SharedArrayBuffer !== 'undefined' &&\n      (isInstance(value, SharedArrayBuffer) ||\n      (value && isInstance(value.buffer, SharedArrayBuffer)))) {\n    return fromArrayBuffer(value, encodingOrOffset, length)\n  }\n\n  if (typeof value === 'number') {\n    throw new TypeError(\n      'The \"value\" argument must not be of type number. Received type number'\n    )\n  }\n\n  const valueOf = value.valueOf && value.valueOf()\n  if (valueOf != null && valueOf !== value) {\n    return Buffer.from(valueOf, encodingOrOffset, length)\n  }\n\n  const b = fromObject(value)\n  if (b) return b\n\n  if (typeof Symbol !== 'undefined' && Symbol.toPrimitive != null &&\n      typeof value[Symbol.toPrimitive] === 'function') {\n    return Buffer.from(value[Symbol.toPrimitive]('string'), encodingOrOffset, length)\n  }\n\n  throw new TypeError(\n    'The first argument must be one of type string, Buffer, ArrayBuffer, Array, ' +\n    'or Array-like Object. Received type ' + (typeof value)\n  )\n}\n\n/**\n * Functionally equivalent to Buffer(arg, encoding) but throws a TypeError\n * if value is a number.\n * Buffer.from(str[, encoding])\n * Buffer.from(array)\n * Buffer.from(buffer)\n * Buffer.from(arrayBuffer[, byteOffset[, length]])\n **/\nBuffer.from = function (value, encodingOrOffset, length) {\n  return from(value, encodingOrOffset, length)\n}\n\n// Note: Change prototype *after* Buffer.from is defined to workaround Chrome bug:\n// https://github.com/feross/buffer/pull/148\nObject.setPrototypeOf(Buffer.prototype, Uint8Array.prototype)\nObject.setPrototypeOf(Buffer, Uint8Array)\n\nfunction assertSize (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('\"size\" argument must be of type number')\n  } else if (size < 0) {\n    throw new RangeError('The value \"' + size + '\" is invalid for option \"size\"')\n  }\n}\n\nfunction alloc (size, fill, encoding) {\n  assertSize(size)\n  if (size <= 0) {\n    return createBuffer(size)\n  }\n  if (fill !== undefined) {\n    // Only pay attention to encoding if it's a string. This\n    // prevents accidentally sending in a number that would\n    // be interpreted as a start offset.\n    return typeof encoding === 'string'\n      ? createBuffer(size).fill(fill, encoding)\n      : createBuffer(size).fill(fill)\n  }\n  return createBuffer(size)\n}\n\n/**\n * Creates a new filled Buffer instance.\n * alloc(size[, fill[, encoding]])\n **/\nBuffer.alloc = function (size, fill, encoding) {\n  return alloc(size, fill, encoding)\n}\n\nfunction allocUnsafe (size) {\n  assertSize(size)\n  return createBuffer(size < 0 ? 0 : checked(size) | 0)\n}\n\n/**\n * Equivalent to Buffer(num), by default creates a non-zero-filled Buffer instance.\n * */\nBuffer.allocUnsafe = function (size) {\n  return allocUnsafe(size)\n}\n/**\n * Equivalent to SlowBuffer(num), by default creates a non-zero-filled Buffer instance.\n */\nBuffer.allocUnsafeSlow = function (size) {\n  return allocUnsafe(size)\n}\n\nfunction fromString (string, encoding) {\n  if (typeof encoding !== 'string' || encoding === '') {\n    encoding = 'utf8'\n  }\n\n  if (!Buffer.isEncoding(encoding)) {\n    throw new TypeError('Unknown encoding: ' + encoding)\n  }\n\n  const length = byteLength(string, encoding) | 0\n  let buf = createBuffer(length)\n\n  const actual = buf.write(string, encoding)\n\n  if (actual !== length) {\n    // Writing a hex string, for example, that contains invalid characters will\n    // cause everything after the first invalid character to be ignored. (e.g.\n    // 'abxxcd' will be treated as 'ab')\n    buf = buf.slice(0, actual)\n  }\n\n  return buf\n}\n\nfunction fromArrayLike (array) {\n  const length = array.length < 0 ? 0 : checked(array.length) | 0\n  const buf = createBuffer(length)\n  for (let i = 0; i < length; i += 1) {\n    buf[i] = array[i] & 255\n  }\n  return buf\n}\n\nfunction fromArrayView (arrayView) {\n  if (isInstance(arrayView, Uint8Array)) {\n    const copy = new Uint8Array(arrayView)\n    return fromArrayBuffer(copy.buffer, copy.byteOffset, copy.byteLength)\n  }\n  return fromArrayLike(arrayView)\n}\n\nfunction fromArrayBuffer (array, byteOffset, length) {\n  if (byteOffset < 0 || array.byteLength < byteOffset) {\n    throw new RangeError('\"offset\" is outside of buffer bounds')\n  }\n\n  if (array.byteLength < byteOffset + (length || 0)) {\n    throw new RangeError('\"length\" is outside of buffer bounds')\n  }\n\n  let buf\n  if (byteOffset === undefined && length === undefined) {\n    buf = new Uint8Array(array)\n  } else if (length === undefined) {\n    buf = new Uint8Array(array, byteOffset)\n  } else {\n    buf = new Uint8Array(array, byteOffset, length)\n  }\n\n  // Return an augmented `Uint8Array` instance\n  Object.setPrototypeOf(buf, Buffer.prototype)\n\n  return buf\n}\n\nfunction fromObject (obj) {\n  if (Buffer.isBuffer(obj)) {\n    const len = checked(obj.length) | 0\n    const buf = createBuffer(len)\n\n    if (buf.length === 0) {\n      return buf\n    }\n\n    obj.copy(buf, 0, 0, len)\n    return buf\n  }\n\n  if (obj.length !== undefined) {\n    if (typeof obj.length !== 'number' || numberIsNaN(obj.length)) {\n      return createBuffer(0)\n    }\n    return fromArrayLike(obj)\n  }\n\n  if (obj.type === 'Buffer' && Array.isArray(obj.data)) {\n    return fromArrayLike(obj.data)\n  }\n}\n\nfunction checked (length) {\n  // Note: cannot use `length < K_MAX_LENGTH` here because that fails when\n  // length is NaN (which is otherwise coerced to zero.)\n  if (length >= K_MAX_LENGTH) {\n    throw new RangeError('Attempt to allocate Buffer larger than maximum ' +\n                         'size: 0x' + K_MAX_LENGTH.toString(16) + ' bytes')\n  }\n  return length | 0\n}\n\nfunction SlowBuffer (length) {\n  if (+length != length) { // eslint-disable-line eqeqeq\n    length = 0\n  }\n  return Buffer.alloc(+length)\n}\n\nBuffer.isBuffer = function isBuffer (b) {\n  return b != null && b._isBuffer === true &&\n    b !== Buffer.prototype // so Buffer.isBuffer(Buffer.prototype) will be false\n}\n\nBuffer.compare = function compare (a, b) {\n  if (isInstance(a, Uint8Array)) a = Buffer.from(a, a.offset, a.byteLength)\n  if (isInstance(b, Uint8Array)) b = Buffer.from(b, b.offset, b.byteLength)\n  if (!Buffer.isBuffer(a) || !Buffer.isBuffer(b)) {\n    throw new TypeError(\n      'The \"buf1\", \"buf2\" arguments must be one of type Buffer or Uint8Array'\n    )\n  }\n\n  if (a === b) return 0\n\n  let x = a.length\n  let y = b.length\n\n  for (let i = 0, len = Math.min(x, y); i < len; ++i) {\n    if (a[i] !== b[i]) {\n      x = a[i]\n      y = b[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\nBuffer.isEncoding = function isEncoding (encoding) {\n  switch (String(encoding).toLowerCase()) {\n    case 'hex':\n    case 'utf8':\n    case 'utf-8':\n    case 'ascii':\n    case 'latin1':\n    case 'binary':\n    case 'base64':\n    case 'ucs2':\n    case 'ucs-2':\n    case 'utf16le':\n    case 'utf-16le':\n      return true\n    default:\n      return false\n  }\n}\n\nBuffer.concat = function concat (list, length) {\n  if (!Array.isArray(list)) {\n    throw new TypeError('\"list\" argument must be an Array of Buffers')\n  }\n\n  if (list.length === 0) {\n    return Buffer.alloc(0)\n  }\n\n  let i\n  if (length === undefined) {\n    length = 0\n    for (i = 0; i < list.length; ++i) {\n      length += list[i].length\n    }\n  }\n\n  const buffer = Buffer.allocUnsafe(length)\n  let pos = 0\n  for (i = 0; i < list.length; ++i) {\n    let buf = list[i]\n    if (isInstance(buf, Uint8Array)) {\n      if (pos + buf.length > buffer.length) {\n        if (!Buffer.isBuffer(buf)) buf = Buffer.from(buf)\n        buf.copy(buffer, pos)\n      } else {\n        Uint8Array.prototype.set.call(\n          buffer,\n          buf,\n          pos\n        )\n      }\n    } else if (!Buffer.isBuffer(buf)) {\n      throw new TypeError('\"list\" argument must be an Array of Buffers')\n    } else {\n      buf.copy(buffer, pos)\n    }\n    pos += buf.length\n  }\n  return buffer\n}\n\nfunction byteLength (string, encoding) {\n  if (Buffer.isBuffer(string)) {\n    return string.length\n  }\n  if (ArrayBuffer.isView(string) || isInstance(string, ArrayBuffer)) {\n    return string.byteLength\n  }\n  if (typeof string !== 'string') {\n    throw new TypeError(\n      'The \"string\" argument must be one of type string, Buffer, or ArrayBuffer. ' +\n      'Received type ' + typeof string\n    )\n  }\n\n  const len = string.length\n  const mustMatch = (arguments.length > 2 && arguments[2] === true)\n  if (!mustMatch && len === 0) return 0\n\n  // Use a for loop to avoid recursion\n  let loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'ascii':\n      case 'latin1':\n      case 'binary':\n        return len\n      case 'utf8':\n      case 'utf-8':\n        return utf8ToBytes(string).length\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return len * 2\n      case 'hex':\n        return len >>> 1\n      case 'base64':\n        return base64ToBytes(string).length\n      default:\n        if (loweredCase) {\n          return mustMatch ? -1 : utf8ToBytes(string).length // assume utf8\n        }\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\nBuffer.byteLength = byteLength\n\nfunction slowToString (encoding, start, end) {\n  let loweredCase = false\n\n  // No need to verify that \"this.length <= MAX_UINT32\" since it's a read-only\n  // property of a typed array.\n\n  // This behaves neither like String nor Uint8Array in that we set start/end\n  // to their upper/lower bounds if the value passed is out of range.\n  // undefined is handled specially as per ECMA-262 6th Edition,\n  // Section 13.3.3.7 Runtime Semantics: KeyedBindingInitialization.\n  if (start === undefined || start < 0) {\n    start = 0\n  }\n  // Return early if start > this.length. Done here to prevent potential uint32\n  // coercion fail below.\n  if (start > this.length) {\n    return ''\n  }\n\n  if (end === undefined || end > this.length) {\n    end = this.length\n  }\n\n  if (end <= 0) {\n    return ''\n  }\n\n  // Force coercion to uint32. This will also coerce falsey/NaN values to 0.\n  end >>>= 0\n  start >>>= 0\n\n  if (end <= start) {\n    return ''\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  while (true) {\n    switch (encoding) {\n      case 'hex':\n        return hexSlice(this, start, end)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Slice(this, start, end)\n\n      case 'ascii':\n        return asciiSlice(this, start, end)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Slice(this, start, end)\n\n      case 'base64':\n        return base64Slice(this, start, end)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return utf16leSlice(this, start, end)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = (encoding + '').toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\n// This property is used by `Buffer.isBuffer` (and the `is-buffer` npm package)\n// to detect a Buffer instance. It's not possible to use `instanceof Buffer`\n// reliably in a browserify context because there could be multiple different\n// copies of the 'buffer' package in use. This method works even for Buffer\n// instances that were created from another copy of the `buffer` package.\n// See: https://github.com/feross/buffer/issues/154\nBuffer.prototype._isBuffer = true\n\nfunction swap (b, n, m) {\n  const i = b[n]\n  b[n] = b[m]\n  b[m] = i\n}\n\nBuffer.prototype.swap16 = function swap16 () {\n  const len = this.length\n  if (len % 2 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 16-bits')\n  }\n  for (let i = 0; i < len; i += 2) {\n    swap(this, i, i + 1)\n  }\n  return this\n}\n\nBuffer.prototype.swap32 = function swap32 () {\n  const len = this.length\n  if (len % 4 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 32-bits')\n  }\n  for (let i = 0; i < len; i += 4) {\n    swap(this, i, i + 3)\n    swap(this, i + 1, i + 2)\n  }\n  return this\n}\n\nBuffer.prototype.swap64 = function swap64 () {\n  const len = this.length\n  if (len % 8 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 64-bits')\n  }\n  for (let i = 0; i < len; i += 8) {\n    swap(this, i, i + 7)\n    swap(this, i + 1, i + 6)\n    swap(this, i + 2, i + 5)\n    swap(this, i + 3, i + 4)\n  }\n  return this\n}\n\nBuffer.prototype.toString = function toString () {\n  const length = this.length\n  if (length === 0) return ''\n  if (arguments.length === 0) return utf8Slice(this, 0, length)\n  return slowToString.apply(this, arguments)\n}\n\nBuffer.prototype.toLocaleString = Buffer.prototype.toString\n\nBuffer.prototype.equals = function equals (b) {\n  if (!Buffer.isBuffer(b)) throw new TypeError('Argument must be a Buffer')\n  if (this === b) return true\n  return Buffer.compare(this, b) === 0\n}\n\nBuffer.prototype.inspect = function inspect () {\n  let str = ''\n  const max = exports.INSPECT_MAX_BYTES\n  str = this.toString('hex', 0, max).replace(/(.{2})/g, '$1 ').trim()\n  if (this.length > max) str += ' ... '\n  return '<Buffer ' + str + '>'\n}\nif (customInspectSymbol) {\n  Buffer.prototype[customInspectSymbol] = Buffer.prototype.inspect\n}\n\nBuffer.prototype.compare = function compare (target, start, end, thisStart, thisEnd) {\n  if (isInstance(target, Uint8Array)) {\n    target = Buffer.from(target, target.offset, target.byteLength)\n  }\n  if (!Buffer.isBuffer(target)) {\n    throw new TypeError(\n      'The \"target\" argument must be one of type Buffer or Uint8Array. ' +\n      'Received type ' + (typeof target)\n    )\n  }\n\n  if (start === undefined) {\n    start = 0\n  }\n  if (end === undefined) {\n    end = target ? target.length : 0\n  }\n  if (thisStart === undefined) {\n    thisStart = 0\n  }\n  if (thisEnd === undefined) {\n    thisEnd = this.length\n  }\n\n  if (start < 0 || end > target.length || thisStart < 0 || thisEnd > this.length) {\n    throw new RangeError('out of range index')\n  }\n\n  if (thisStart >= thisEnd && start >= end) {\n    return 0\n  }\n  if (thisStart >= thisEnd) {\n    return -1\n  }\n  if (start >= end) {\n    return 1\n  }\n\n  start >>>= 0\n  end >>>= 0\n  thisStart >>>= 0\n  thisEnd >>>= 0\n\n  if (this === target) return 0\n\n  let x = thisEnd - thisStart\n  let y = end - start\n  const len = Math.min(x, y)\n\n  const thisCopy = this.slice(thisStart, thisEnd)\n  const targetCopy = target.slice(start, end)\n\n  for (let i = 0; i < len; ++i) {\n    if (thisCopy[i] !== targetCopy[i]) {\n      x = thisCopy[i]\n      y = targetCopy[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\n// Finds either the first index of `val` in `buffer` at offset >= `byteOffset`,\n// OR the last index of `val` in `buffer` at offset <= `byteOffset`.\n//\n// Arguments:\n// - buffer - a Buffer to search\n// - val - a string, Buffer, or number\n// - byteOffset - an index into `buffer`; will be clamped to an int32\n// - encoding - an optional encoding, relevant is val is a string\n// - dir - true for indexOf, false for lastIndexOf\nfunction bidirectionalIndexOf (buffer, val, byteOffset, encoding, dir) {\n  // Empty buffer means no match\n  if (buffer.length === 0) return -1\n\n  // Normalize byteOffset\n  if (typeof byteOffset === 'string') {\n    encoding = byteOffset\n    byteOffset = 0\n  } else if (byteOffset > 0x7fffffff) {\n    byteOffset = 0x7fffffff\n  } else if (byteOffset < -0x80000000) {\n    byteOffset = -0x80000000\n  }\n  byteOffset = +byteOffset // Coerce to Number.\n  if (numberIsNaN(byteOffset)) {\n    // byteOffset: it it's undefined, null, NaN, \"foo\", etc, search whole buffer\n    byteOffset = dir ? 0 : (buffer.length - 1)\n  }\n\n  // Normalize byteOffset: negative offsets start from the end of the buffer\n  if (byteOffset < 0) byteOffset = buffer.length + byteOffset\n  if (byteOffset >= buffer.length) {\n    if (dir) return -1\n    else byteOffset = buffer.length - 1\n  } else if (byteOffset < 0) {\n    if (dir) byteOffset = 0\n    else return -1\n  }\n\n  // Normalize val\n  if (typeof val === 'string') {\n    val = Buffer.from(val, encoding)\n  }\n\n  // Finally, search either indexOf (if dir is true) or lastIndexOf\n  if (Buffer.isBuffer(val)) {\n    // Special case: looking for empty string/buffer always fails\n    if (val.length === 0) {\n      return -1\n    }\n    return arrayIndexOf(buffer, val, byteOffset, encoding, dir)\n  } else if (typeof val === 'number') {\n    val = val & 0xFF // Search for a byte value [0-255]\n    if (typeof Uint8Array.prototype.indexOf === 'function') {\n      if (dir) {\n        return Uint8Array.prototype.indexOf.call(buffer, val, byteOffset)\n      } else {\n        return Uint8Array.prototype.lastIndexOf.call(buffer, val, byteOffset)\n      }\n    }\n    return arrayIndexOf(buffer, [val], byteOffset, encoding, dir)\n  }\n\n  throw new TypeError('val must be string, number or Buffer')\n}\n\nfunction arrayIndexOf (arr, val, byteOffset, encoding, dir) {\n  let indexSize = 1\n  let arrLength = arr.length\n  let valLength = val.length\n\n  if (encoding !== undefined) {\n    encoding = String(encoding).toLowerCase()\n    if (encoding === 'ucs2' || encoding === 'ucs-2' ||\n        encoding === 'utf16le' || encoding === 'utf-16le') {\n      if (arr.length < 2 || val.length < 2) {\n        return -1\n      }\n      indexSize = 2\n      arrLength /= 2\n      valLength /= 2\n      byteOffset /= 2\n    }\n  }\n\n  function read (buf, i) {\n    if (indexSize === 1) {\n      return buf[i]\n    } else {\n      return buf.readUInt16BE(i * indexSize)\n    }\n  }\n\n  let i\n  if (dir) {\n    let foundIndex = -1\n    for (i = byteOffset; i < arrLength; i++) {\n      if (read(arr, i) === read(val, foundIndex === -1 ? 0 : i - foundIndex)) {\n        if (foundIndex === -1) foundIndex = i\n        if (i - foundIndex + 1 === valLength) return foundIndex * indexSize\n      } else {\n        if (foundIndex !== -1) i -= i - foundIndex\n        foundIndex = -1\n      }\n    }\n  } else {\n    if (byteOffset + valLength > arrLength) byteOffset = arrLength - valLength\n    for (i = byteOffset; i >= 0; i--) {\n      let found = true\n      for (let j = 0; j < valLength; j++) {\n        if (read(arr, i + j) !== read(val, j)) {\n          found = false\n          break\n        }\n      }\n      if (found) return i\n    }\n  }\n\n  return -1\n}\n\nBuffer.prototype.includes = function includes (val, byteOffset, encoding) {\n  return this.indexOf(val, byteOffset, encoding) !== -1\n}\n\nBuffer.prototype.indexOf = function indexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, true)\n}\n\nBuffer.prototype.lastIndexOf = function lastIndexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, false)\n}\n\nfunction hexWrite (buf, string, offset, length) {\n  offset = Number(offset) || 0\n  const remaining = buf.length - offset\n  if (!length) {\n    length = remaining\n  } else {\n    length = Number(length)\n    if (length > remaining) {\n      length = remaining\n    }\n  }\n\n  const strLen = string.length\n\n  if (length > strLen / 2) {\n    length = strLen / 2\n  }\n  let i\n  for (i = 0; i < length; ++i) {\n    const parsed = parseInt(string.substr(i * 2, 2), 16)\n    if (numberIsNaN(parsed)) return i\n    buf[offset + i] = parsed\n  }\n  return i\n}\n\nfunction utf8Write (buf, string, offset, length) {\n  return blitBuffer(utf8ToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nfunction asciiWrite (buf, string, offset, length) {\n  return blitBuffer(asciiToBytes(string), buf, offset, length)\n}\n\nfunction base64Write (buf, string, offset, length) {\n  return blitBuffer(base64ToBytes(string), buf, offset, length)\n}\n\nfunction ucs2Write (buf, string, offset, length) {\n  return blitBuffer(utf16leToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nBuffer.prototype.write = function write (string, offset, length, encoding) {\n  // Buffer#write(string)\n  if (offset === undefined) {\n    encoding = 'utf8'\n    length = this.length\n    offset = 0\n  // Buffer#write(string, encoding)\n  } else if (length === undefined && typeof offset === 'string') {\n    encoding = offset\n    length = this.length\n    offset = 0\n  // Buffer#write(string, offset[, length][, encoding])\n  } else if (isFinite(offset)) {\n    offset = offset >>> 0\n    if (isFinite(length)) {\n      length = length >>> 0\n      if (encoding === undefined) encoding = 'utf8'\n    } else {\n      encoding = length\n      length = undefined\n    }\n  } else {\n    throw new Error(\n      'Buffer.write(string, encoding, offset[, length]) is no longer supported'\n    )\n  }\n\n  const remaining = this.length - offset\n  if (length === undefined || length > remaining) length = remaining\n\n  if ((string.length > 0 && (length < 0 || offset < 0)) || offset > this.length) {\n    throw new RangeError('Attempt to write outside buffer bounds')\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  let loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'hex':\n        return hexWrite(this, string, offset, length)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Write(this, string, offset, length)\n\n      case 'ascii':\n      case 'latin1':\n      case 'binary':\n        return asciiWrite(this, string, offset, length)\n\n      case 'base64':\n        // Warning: maxLength not taken into account in base64Write\n        return base64Write(this, string, offset, length)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return ucs2Write(this, string, offset, length)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\nBuffer.prototype.toJSON = function toJSON () {\n  return {\n    type: 'Buffer',\n    data: Array.prototype.slice.call(this._arr || this, 0)\n  }\n}\n\nfunction base64Slice (buf, start, end) {\n  if (start === 0 && end === buf.length) {\n    return base64.fromByteArray(buf)\n  } else {\n    return base64.fromByteArray(buf.slice(start, end))\n  }\n}\n\nfunction utf8Slice (buf, start, end) {\n  end = Math.min(buf.length, end)\n  const res = []\n\n  let i = start\n  while (i < end) {\n    const firstByte = buf[i]\n    let codePoint = null\n    let bytesPerSequence = (firstByte > 0xEF)\n      ? 4\n      : (firstByte > 0xDF)\n          ? 3\n          : (firstByte > 0xBF)\n              ? 2\n              : 1\n\n    if (i + bytesPerSequence <= end) {\n      let secondByte, thirdByte, fourthByte, tempCodePoint\n\n      switch (bytesPerSequence) {\n        case 1:\n          if (firstByte < 0x80) {\n            codePoint = firstByte\n          }\n          break\n        case 2:\n          secondByte = buf[i + 1]\n          if ((secondByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0x1F) << 0x6 | (secondByte & 0x3F)\n            if (tempCodePoint > 0x7F) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 3:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0xC | (secondByte & 0x3F) << 0x6 | (thirdByte & 0x3F)\n            if (tempCodePoint > 0x7FF && (tempCodePoint < 0xD800 || tempCodePoint > 0xDFFF)) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 4:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          fourthByte = buf[i + 3]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80 && (fourthByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0x12 | (secondByte & 0x3F) << 0xC | (thirdByte & 0x3F) << 0x6 | (fourthByte & 0x3F)\n            if (tempCodePoint > 0xFFFF && tempCodePoint < 0x110000) {\n              codePoint = tempCodePoint\n            }\n          }\n      }\n    }\n\n    if (codePoint === null) {\n      // we did not generate a valid codePoint so insert a\n      // replacement char (U+FFFD) and advance only 1 byte\n      codePoint = 0xFFFD\n      bytesPerSequence = 1\n    } else if (codePoint > 0xFFFF) {\n      // encode to utf16 (surrogate pair dance)\n      codePoint -= 0x10000\n      res.push(codePoint >>> 10 & 0x3FF | 0xD800)\n      codePoint = 0xDC00 | codePoint & 0x3FF\n    }\n\n    res.push(codePoint)\n    i += bytesPerSequence\n  }\n\n  return decodeCodePointsArray(res)\n}\n\n// Based on http://stackoverflow.com/a/22747272/680742, the browser with\n// the lowest limit is Chrome, with 0x10000 args.\n// We go 1 magnitude less, for safety\nconst MAX_ARGUMENTS_LENGTH = 0x1000\n\nfunction decodeCodePointsArray (codePoints) {\n  const len = codePoints.length\n  if (len <= MAX_ARGUMENTS_LENGTH) {\n    return String.fromCharCode.apply(String, codePoints) // avoid extra slice()\n  }\n\n  // Decode in chunks to avoid \"call stack size exceeded\".\n  let res = ''\n  let i = 0\n  while (i < len) {\n    res += String.fromCharCode.apply(\n      String,\n      codePoints.slice(i, i += MAX_ARGUMENTS_LENGTH)\n    )\n  }\n  return res\n}\n\nfunction asciiSlice (buf, start, end) {\n  let ret = ''\n  end = Math.min(buf.length, end)\n\n  for (let i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i] & 0x7F)\n  }\n  return ret\n}\n\nfunction latin1Slice (buf, start, end) {\n  let ret = ''\n  end = Math.min(buf.length, end)\n\n  for (let i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i])\n  }\n  return ret\n}\n\nfunction hexSlice (buf, start, end) {\n  const len = buf.length\n\n  if (!start || start < 0) start = 0\n  if (!end || end < 0 || end > len) end = len\n\n  let out = ''\n  for (let i = start; i < end; ++i) {\n    out += hexSliceLookupTable[buf[i]]\n  }\n  return out\n}\n\nfunction utf16leSlice (buf, start, end) {\n  const bytes = buf.slice(start, end)\n  let res = ''\n  // If bytes.length is odd, the last 8 bits must be ignored (same as node.js)\n  for (let i = 0; i < bytes.length - 1; i += 2) {\n    res += String.fromCharCode(bytes[i] + (bytes[i + 1] * 256))\n  }\n  return res\n}\n\nBuffer.prototype.slice = function slice (start, end) {\n  const len = this.length\n  start = ~~start\n  end = end === undefined ? len : ~~end\n\n  if (start < 0) {\n    start += len\n    if (start < 0) start = 0\n  } else if (start > len) {\n    start = len\n  }\n\n  if (end < 0) {\n    end += len\n    if (end < 0) end = 0\n  } else if (end > len) {\n    end = len\n  }\n\n  if (end < start) end = start\n\n  const newBuf = this.subarray(start, end)\n  // Return an augmented `Uint8Array` instance\n  Object.setPrototypeOf(newBuf, Buffer.prototype)\n\n  return newBuf\n}\n\n/*\n * Need to make sure that buffer isn't trying to write out of bounds.\n */\nfunction checkOffset (offset, ext, length) {\n  if ((offset % 1) !== 0 || offset < 0) throw new RangeError('offset is not uint')\n  if (offset + ext > length) throw new RangeError('Trying to access beyond buffer length')\n}\n\nBuffer.prototype.readUintLE =\nBuffer.prototype.readUIntLE = function readUIntLE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  let val = this[offset]\n  let mul = 1\n  let i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUintBE =\nBuffer.prototype.readUIntBE = function readUIntBE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) {\n    checkOffset(offset, byteLength, this.length)\n  }\n\n  let val = this[offset + --byteLength]\n  let mul = 1\n  while (byteLength > 0 && (mul *= 0x100)) {\n    val += this[offset + --byteLength] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUint8 =\nBuffer.prototype.readUInt8 = function readUInt8 (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  return this[offset]\n}\n\nBuffer.prototype.readUint16LE =\nBuffer.prototype.readUInt16LE = function readUInt16LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return this[offset] | (this[offset + 1] << 8)\n}\n\nBuffer.prototype.readUint16BE =\nBuffer.prototype.readUInt16BE = function readUInt16BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return (this[offset] << 8) | this[offset + 1]\n}\n\nBuffer.prototype.readUint32LE =\nBuffer.prototype.readUInt32LE = function readUInt32LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return ((this[offset]) |\n      (this[offset + 1] << 8) |\n      (this[offset + 2] << 16)) +\n      (this[offset + 3] * 0x1000000)\n}\n\nBuffer.prototype.readUint32BE =\nBuffer.prototype.readUInt32BE = function readUInt32BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] * 0x1000000) +\n    ((this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    this[offset + 3])\n}\n\nBuffer.prototype.readBigUInt64LE = defineBigIntMethod(function readBigUInt64LE (offset) {\n  offset = offset >>> 0\n  validateNumber(offset, 'offset')\n  const first = this[offset]\n  const last = this[offset + 7]\n  if (first === undefined || last === undefined) {\n    boundsError(offset, this.length - 8)\n  }\n\n  const lo = first +\n    this[++offset] * 2 ** 8 +\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 24\n\n  const hi = this[++offset] +\n    this[++offset] * 2 ** 8 +\n    this[++offset] * 2 ** 16 +\n    last * 2 ** 24\n\n  return BigInt(lo) + (BigInt(hi) << BigInt(32))\n})\n\nBuffer.prototype.readBigUInt64BE = defineBigIntMethod(function readBigUInt64BE (offset) {\n  offset = offset >>> 0\n  validateNumber(offset, 'offset')\n  const first = this[offset]\n  const last = this[offset + 7]\n  if (first === undefined || last === undefined) {\n    boundsError(offset, this.length - 8)\n  }\n\n  const hi = first * 2 ** 24 +\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 8 +\n    this[++offset]\n\n  const lo = this[++offset] * 2 ** 24 +\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 8 +\n    last\n\n  return (BigInt(hi) << BigInt(32)) + BigInt(lo)\n})\n\nBuffer.prototype.readIntLE = function readIntLE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  let val = this[offset]\n  let mul = 1\n  let i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readIntBE = function readIntBE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  let i = byteLength\n  let mul = 1\n  let val = this[offset + --i]\n  while (i > 0 && (mul *= 0x100)) {\n    val += this[offset + --i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readInt8 = function readInt8 (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  if (!(this[offset] & 0x80)) return (this[offset])\n  return ((0xff - this[offset] + 1) * -1)\n}\n\nBuffer.prototype.readInt16LE = function readInt16LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  const val = this[offset] | (this[offset + 1] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt16BE = function readInt16BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  const val = this[offset + 1] | (this[offset] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt32LE = function readInt32LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset]) |\n    (this[offset + 1] << 8) |\n    (this[offset + 2] << 16) |\n    (this[offset + 3] << 24)\n}\n\nBuffer.prototype.readInt32BE = function readInt32BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] << 24) |\n    (this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    (this[offset + 3])\n}\n\nBuffer.prototype.readBigInt64LE = defineBigIntMethod(function readBigInt64LE (offset) {\n  offset = offset >>> 0\n  validateNumber(offset, 'offset')\n  const first = this[offset]\n  const last = this[offset + 7]\n  if (first === undefined || last === undefined) {\n    boundsError(offset, this.length - 8)\n  }\n\n  const val = this[offset + 4] +\n    this[offset + 5] * 2 ** 8 +\n    this[offset + 6] * 2 ** 16 +\n    (last << 24) // Overflow\n\n  return (BigInt(val) << BigInt(32)) +\n    BigInt(first +\n    this[++offset] * 2 ** 8 +\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 24)\n})\n\nBuffer.prototype.readBigInt64BE = defineBigIntMethod(function readBigInt64BE (offset) {\n  offset = offset >>> 0\n  validateNumber(offset, 'offset')\n  const first = this[offset]\n  const last = this[offset + 7]\n  if (first === undefined || last === undefined) {\n    boundsError(offset, this.length - 8)\n  }\n\n  const val = (first << 24) + // Overflow\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 8 +\n    this[++offset]\n\n  return (BigInt(val) << BigInt(32)) +\n    BigInt(this[++offset] * 2 ** 24 +\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 8 +\n    last)\n})\n\nBuffer.prototype.readFloatLE = function readFloatLE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, true, 23, 4)\n}\n\nBuffer.prototype.readFloatBE = function readFloatBE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, false, 23, 4)\n}\n\nBuffer.prototype.readDoubleLE = function readDoubleLE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, true, 52, 8)\n}\n\nBuffer.prototype.readDoubleBE = function readDoubleBE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, false, 52, 8)\n}\n\nfunction checkInt (buf, value, offset, ext, max, min) {\n  if (!Buffer.isBuffer(buf)) throw new TypeError('\"buffer\" argument must be a Buffer instance')\n  if (value > max || value < min) throw new RangeError('\"value\" argument is out of bounds')\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n}\n\nBuffer.prototype.writeUintLE =\nBuffer.prototype.writeUIntLE = function writeUIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) {\n    const maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  let mul = 1\n  let i = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUintBE =\nBuffer.prototype.writeUIntBE = function writeUIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) {\n    const maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  let i = byteLength - 1\n  let mul = 1\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUint8 =\nBuffer.prototype.writeUInt8 = function writeUInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0xff, 0)\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nBuffer.prototype.writeUint16LE =\nBuffer.prototype.writeUInt16LE = function writeUInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  this[offset] = (value & 0xff)\n  this[offset + 1] = (value >>> 8)\n  return offset + 2\n}\n\nBuffer.prototype.writeUint16BE =\nBuffer.prototype.writeUInt16BE = function writeUInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  this[offset] = (value >>> 8)\n  this[offset + 1] = (value & 0xff)\n  return offset + 2\n}\n\nBuffer.prototype.writeUint32LE =\nBuffer.prototype.writeUInt32LE = function writeUInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  this[offset + 3] = (value >>> 24)\n  this[offset + 2] = (value >>> 16)\n  this[offset + 1] = (value >>> 8)\n  this[offset] = (value & 0xff)\n  return offset + 4\n}\n\nBuffer.prototype.writeUint32BE =\nBuffer.prototype.writeUInt32BE = function writeUInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  this[offset] = (value >>> 24)\n  this[offset + 1] = (value >>> 16)\n  this[offset + 2] = (value >>> 8)\n  this[offset + 3] = (value & 0xff)\n  return offset + 4\n}\n\nfunction wrtBigUInt64LE (buf, value, offset, min, max) {\n  checkIntBI(value, min, max, buf, offset, 7)\n\n  let lo = Number(value & BigInt(0xffffffff))\n  buf[offset++] = lo\n  lo = lo >> 8\n  buf[offset++] = lo\n  lo = lo >> 8\n  buf[offset++] = lo\n  lo = lo >> 8\n  buf[offset++] = lo\n  let hi = Number(value >> BigInt(32) & BigInt(0xffffffff))\n  buf[offset++] = hi\n  hi = hi >> 8\n  buf[offset++] = hi\n  hi = hi >> 8\n  buf[offset++] = hi\n  hi = hi >> 8\n  buf[offset++] = hi\n  return offset\n}\n\nfunction wrtBigUInt64BE (buf, value, offset, min, max) {\n  checkIntBI(value, min, max, buf, offset, 7)\n\n  let lo = Number(value & BigInt(0xffffffff))\n  buf[offset + 7] = lo\n  lo = lo >> 8\n  buf[offset + 6] = lo\n  lo = lo >> 8\n  buf[offset + 5] = lo\n  lo = lo >> 8\n  buf[offset + 4] = lo\n  let hi = Number(value >> BigInt(32) & BigInt(0xffffffff))\n  buf[offset + 3] = hi\n  hi = hi >> 8\n  buf[offset + 2] = hi\n  hi = hi >> 8\n  buf[offset + 1] = hi\n  hi = hi >> 8\n  buf[offset] = hi\n  return offset + 8\n}\n\nBuffer.prototype.writeBigUInt64LE = defineBigIntMethod(function writeBigUInt64LE (value, offset = 0) {\n  return wrtBigUInt64LE(this, value, offset, BigInt(0), BigInt('0xffffffffffffffff'))\n})\n\nBuffer.prototype.writeBigUInt64BE = defineBigIntMethod(function writeBigUInt64BE (value, offset = 0) {\n  return wrtBigUInt64BE(this, value, offset, BigInt(0), BigInt('0xffffffffffffffff'))\n})\n\nBuffer.prototype.writeIntLE = function writeIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    const limit = Math.pow(2, (8 * byteLength) - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  let i = 0\n  let mul = 1\n  let sub = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i - 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeIntBE = function writeIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    const limit = Math.pow(2, (8 * byteLength) - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  let i = byteLength - 1\n  let mul = 1\n  let sub = 0\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i + 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeInt8 = function writeInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0x7f, -0x80)\n  if (value < 0) value = 0xff + value + 1\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nBuffer.prototype.writeInt16LE = function writeInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  this[offset] = (value & 0xff)\n  this[offset + 1] = (value >>> 8)\n  return offset + 2\n}\n\nBuffer.prototype.writeInt16BE = function writeInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  this[offset] = (value >>> 8)\n  this[offset + 1] = (value & 0xff)\n  return offset + 2\n}\n\nBuffer.prototype.writeInt32LE = function writeInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  this[offset] = (value & 0xff)\n  this[offset + 1] = (value >>> 8)\n  this[offset + 2] = (value >>> 16)\n  this[offset + 3] = (value >>> 24)\n  return offset + 4\n}\n\nBuffer.prototype.writeInt32BE = function writeInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (value < 0) value = 0xffffffff + value + 1\n  this[offset] = (value >>> 24)\n  this[offset + 1] = (value >>> 16)\n  this[offset + 2] = (value >>> 8)\n  this[offset + 3] = (value & 0xff)\n  return offset + 4\n}\n\nBuffer.prototype.writeBigInt64LE = defineBigIntMethod(function writeBigInt64LE (value, offset = 0) {\n  return wrtBigUInt64LE(this, value, offset, -BigInt('0x8000000000000000'), BigInt('0x7fffffffffffffff'))\n})\n\nBuffer.prototype.writeBigInt64BE = defineBigIntMethod(function writeBigInt64BE (value, offset = 0) {\n  return wrtBigUInt64BE(this, value, offset, -BigInt('0x8000000000000000'), BigInt('0x7fffffffffffffff'))\n})\n\nfunction checkIEEE754 (buf, value, offset, ext, max, min) {\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n  if (offset < 0) throw new RangeError('Index out of range')\n}\n\nfunction writeFloat (buf, value, offset, littleEndian, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 4, 3.4028234663852886e+38, -3.4028234663852886e+38)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 23, 4)\n  return offset + 4\n}\n\nBuffer.prototype.writeFloatLE = function writeFloatLE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeFloatBE = function writeFloatBE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, false, noAssert)\n}\n\nfunction writeDouble (buf, value, offset, littleEndian, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 8, 1.7976931348623157E+308, -1.7976931348623157E+308)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 52, 8)\n  return offset + 8\n}\n\nBuffer.prototype.writeDoubleLE = function writeDoubleLE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeDoubleBE = function writeDoubleBE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, false, noAssert)\n}\n\n// copy(targetBuffer, targetStart=0, sourceStart=0, sourceEnd=buffer.length)\nBuffer.prototype.copy = function copy (target, targetStart, start, end) {\n  if (!Buffer.isBuffer(target)) throw new TypeError('argument should be a Buffer')\n  if (!start) start = 0\n  if (!end && end !== 0) end = this.length\n  if (targetStart >= target.length) targetStart = target.length\n  if (!targetStart) targetStart = 0\n  if (end > 0 && end < start) end = start\n\n  // Copy 0 bytes; we're done\n  if (end === start) return 0\n  if (target.length === 0 || this.length === 0) return 0\n\n  // Fatal error conditions\n  if (targetStart < 0) {\n    throw new RangeError('targetStart out of bounds')\n  }\n  if (start < 0 || start >= this.length) throw new RangeError('Index out of range')\n  if (end < 0) throw new RangeError('sourceEnd out of bounds')\n\n  // Are we oob?\n  if (end > this.length) end = this.length\n  if (target.length - targetStart < end - start) {\n    end = target.length - targetStart + start\n  }\n\n  const len = end - start\n\n  if (this === target && typeof Uint8Array.prototype.copyWithin === 'function') {\n    // Use built-in when available, missing from IE11\n    this.copyWithin(targetStart, start, end)\n  } else {\n    Uint8Array.prototype.set.call(\n      target,\n      this.subarray(start, end),\n      targetStart\n    )\n  }\n\n  return len\n}\n\n// Usage:\n//    buffer.fill(number[, offset[, end]])\n//    buffer.fill(buffer[, offset[, end]])\n//    buffer.fill(string[, offset[, end]][, encoding])\nBuffer.prototype.fill = function fill (val, start, end, encoding) {\n  // Handle string cases:\n  if (typeof val === 'string') {\n    if (typeof start === 'string') {\n      encoding = start\n      start = 0\n      end = this.length\n    } else if (typeof end === 'string') {\n      encoding = end\n      end = this.length\n    }\n    if (encoding !== undefined && typeof encoding !== 'string') {\n      throw new TypeError('encoding must be a string')\n    }\n    if (typeof encoding === 'string' && !Buffer.isEncoding(encoding)) {\n      throw new TypeError('Unknown encoding: ' + encoding)\n    }\n    if (val.length === 1) {\n      const code = val.charCodeAt(0)\n      if ((encoding === 'utf8' && code < 128) ||\n          encoding === 'latin1') {\n        // Fast path: If `val` fits into a single byte, use that numeric value.\n        val = code\n      }\n    }\n  } else if (typeof val === 'number') {\n    val = val & 255\n  } else if (typeof val === 'boolean') {\n    val = Number(val)\n  }\n\n  // Invalid ranges are not set to a default, so can range check early.\n  if (start < 0 || this.length < start || this.length < end) {\n    throw new RangeError('Out of range index')\n  }\n\n  if (end <= start) {\n    return this\n  }\n\n  start = start >>> 0\n  end = end === undefined ? this.length : end >>> 0\n\n  if (!val) val = 0\n\n  let i\n  if (typeof val === 'number') {\n    for (i = start; i < end; ++i) {\n      this[i] = val\n    }\n  } else {\n    const bytes = Buffer.isBuffer(val)\n      ? val\n      : Buffer.from(val, encoding)\n    const len = bytes.length\n    if (len === 0) {\n      throw new TypeError('The value \"' + val +\n        '\" is invalid for argument \"value\"')\n    }\n    for (i = 0; i < end - start; ++i) {\n      this[i + start] = bytes[i % len]\n    }\n  }\n\n  return this\n}\n\n// CUSTOM ERRORS\n// =============\n\n// Simplified versions from Node, changed for Buffer-only usage\nconst errors = {}\nfunction E (sym, getMessage, Base) {\n  errors[sym] = class NodeError extends Base {\n    constructor () {\n      super()\n\n      Object.defineProperty(this, 'message', {\n        value: getMessage.apply(this, arguments),\n        writable: true,\n        configurable: true\n      })\n\n      // Add the error code to the name to include it in the stack trace.\n      this.name = `${this.name} [${sym}]`\n      // Access the stack to generate the error message including the error code\n      // from the name.\n      this.stack // eslint-disable-line no-unused-expressions\n      // Reset the name to the actual name.\n      delete this.name\n    }\n\n    get code () {\n      return sym\n    }\n\n    set code (value) {\n      Object.defineProperty(this, 'code', {\n        configurable: true,\n        enumerable: true,\n        value,\n        writable: true\n      })\n    }\n\n    toString () {\n      return `${this.name} [${sym}]: ${this.message}`\n    }\n  }\n}\n\nE('ERR_BUFFER_OUT_OF_BOUNDS',\n  function (name) {\n    if (name) {\n      return `${name} is outside of buffer bounds`\n    }\n\n    return 'Attempt to access memory outside buffer bounds'\n  }, RangeError)\nE('ERR_INVALID_ARG_TYPE',\n  function (name, actual) {\n    return `The \"${name}\" argument must be of type number. Received type ${typeof actual}`\n  }, TypeError)\nE('ERR_OUT_OF_RANGE',\n  function (str, range, input) {\n    let msg = `The value of \"${str}\" is out of range.`\n    let received = input\n    if (Number.isInteger(input) && Math.abs(input) > 2 ** 32) {\n      received = addNumericalSeparator(String(input))\n    } else if (typeof input === 'bigint') {\n      received = String(input)\n      if (input > BigInt(2) ** BigInt(32) || input < -(BigInt(2) ** BigInt(32))) {\n        received = addNumericalSeparator(received)\n      }\n      received += 'n'\n    }\n    msg += ` It must be ${range}. Received ${received}`\n    return msg\n  }, RangeError)\n\nfunction addNumericalSeparator (val) {\n  let res = ''\n  let i = val.length\n  const start = val[0] === '-' ? 1 : 0\n  for (; i >= start + 4; i -= 3) {\n    res = `_${val.slice(i - 3, i)}${res}`\n  }\n  return `${val.slice(0, i)}${res}`\n}\n\n// CHECK FUNCTIONS\n// ===============\n\nfunction checkBounds (buf, offset, byteLength) {\n  validateNumber(offset, 'offset')\n  if (buf[offset] === undefined || buf[offset + byteLength] === undefined) {\n    boundsError(offset, buf.length - (byteLength + 1))\n  }\n}\n\nfunction checkIntBI (value, min, max, buf, offset, byteLength) {\n  if (value > max || value < min) {\n    const n = typeof min === 'bigint' ? 'n' : ''\n    let range\n    if (byteLength > 3) {\n      if (min === 0 || min === BigInt(0)) {\n        range = `>= 0${n} and < 2${n} ** ${(byteLength + 1) * 8}${n}`\n      } else {\n        range = `>= -(2${n} ** ${(byteLength + 1) * 8 - 1}${n}) and < 2 ** ` +\n                `${(byteLength + 1) * 8 - 1}${n}`\n      }\n    } else {\n      range = `>= ${min}${n} and <= ${max}${n}`\n    }\n    throw new errors.ERR_OUT_OF_RANGE('value', range, value)\n  }\n  checkBounds(buf, offset, byteLength)\n}\n\nfunction validateNumber (value, name) {\n  if (typeof value !== 'number') {\n    throw new errors.ERR_INVALID_ARG_TYPE(name, 'number', value)\n  }\n}\n\nfunction boundsError (value, length, type) {\n  if (Math.floor(value) !== value) {\n    validateNumber(value, type)\n    throw new errors.ERR_OUT_OF_RANGE(type || 'offset', 'an integer', value)\n  }\n\n  if (length < 0) {\n    throw new errors.ERR_BUFFER_OUT_OF_BOUNDS()\n  }\n\n  throw new errors.ERR_OUT_OF_RANGE(type || 'offset',\n                                    `>= ${type ? 1 : 0} and <= ${length}`,\n                                    value)\n}\n\n// HELPER FUNCTIONS\n// ================\n\nconst INVALID_BASE64_RE = /[^+/0-9A-Za-z-_]/g\n\nfunction base64clean (str) {\n  // Node takes equal signs as end of the Base64 encoding\n  str = str.split('=')[0]\n  // Node strips out invalid characters like \\n and \\t from the string, base64-js does not\n  str = str.trim().replace(INVALID_BASE64_RE, '')\n  // Node converts strings with length < 2 to ''\n  if (str.length < 2) return ''\n  // Node allows for non-padded base64 strings (missing trailing ===), base64-js does not\n  while (str.length % 4 !== 0) {\n    str = str + '='\n  }\n  return str\n}\n\nfunction utf8ToBytes (string, units) {\n  units = units || Infinity\n  let codePoint\n  const length = string.length\n  let leadSurrogate = null\n  const bytes = []\n\n  for (let i = 0; i < length; ++i) {\n    codePoint = string.charCodeAt(i)\n\n    // is surrogate component\n    if (codePoint > 0xD7FF && codePoint < 0xE000) {\n      // last char was a lead\n      if (!leadSurrogate) {\n        // no lead yet\n        if (codePoint > 0xDBFF) {\n          // unexpected trail\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        } else if (i + 1 === length) {\n          // unpaired lead\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        }\n\n        // valid lead\n        leadSurrogate = codePoint\n\n        continue\n      }\n\n      // 2 leads in a row\n      if (codePoint < 0xDC00) {\n        if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n        leadSurrogate = codePoint\n        continue\n      }\n\n      // valid surrogate pair\n      codePoint = (leadSurrogate - 0xD800 << 10 | codePoint - 0xDC00) + 0x10000\n    } else if (leadSurrogate) {\n      // valid bmp char, but last char was a lead\n      if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n    }\n\n    leadSurrogate = null\n\n    // encode utf8\n    if (codePoint < 0x80) {\n      if ((units -= 1) < 0) break\n      bytes.push(codePoint)\n    } else if (codePoint < 0x800) {\n      if ((units -= 2) < 0) break\n      bytes.push(\n        codePoint >> 0x6 | 0xC0,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x10000) {\n      if ((units -= 3) < 0) break\n      bytes.push(\n        codePoint >> 0xC | 0xE0,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x110000) {\n      if ((units -= 4) < 0) break\n      bytes.push(\n        codePoint >> 0x12 | 0xF0,\n        codePoint >> 0xC & 0x3F | 0x80,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else {\n      throw new Error('Invalid code point')\n    }\n  }\n\n  return bytes\n}\n\nfunction asciiToBytes (str) {\n  const byteArray = []\n  for (let i = 0; i < str.length; ++i) {\n    // Node's code seems to be doing this and not & 0x7F..\n    byteArray.push(str.charCodeAt(i) & 0xFF)\n  }\n  return byteArray\n}\n\nfunction utf16leToBytes (str, units) {\n  let c, hi, lo\n  const byteArray = []\n  for (let i = 0; i < str.length; ++i) {\n    if ((units -= 2) < 0) break\n\n    c = str.charCodeAt(i)\n    hi = c >> 8\n    lo = c % 256\n    byteArray.push(lo)\n    byteArray.push(hi)\n  }\n\n  return byteArray\n}\n\nfunction base64ToBytes (str) {\n  return base64.toByteArray(base64clean(str))\n}\n\nfunction blitBuffer (src, dst, offset, length) {\n  let i\n  for (i = 0; i < length; ++i) {\n    if ((i + offset >= dst.length) || (i >= src.length)) break\n    dst[i + offset] = src[i]\n  }\n  return i\n}\n\n// ArrayBuffer or Uint8Array objects from other contexts (i.e. iframes) do not pass\n// the `instanceof` check but they should be treated as of that type.\n// See: https://github.com/feross/buffer/issues/166\nfunction isInstance (obj, type) {\n  return obj instanceof type ||\n    (obj != null && obj.constructor != null && obj.constructor.name != null &&\n      obj.constructor.name === type.name)\n}\nfunction numberIsNaN (obj) {\n  // For IE11 support\n  return obj !== obj // eslint-disable-line no-self-compare\n}\n\n// Create lookup table for `toString('hex')`\n// See: https://github.com/feross/buffer/issues/219\nconst hexSliceLookupTable = (function () {\n  const alphabet = '0123456789abcdef'\n  const table = new Array(256)\n  for (let i = 0; i < 16; ++i) {\n    const i16 = i * 16\n    for (let j = 0; j < 16; ++j) {\n      table[i16 + j] = alphabet[i] + alphabet[j]\n    }\n  }\n  return table\n})()\n\n// Return not function with Error if BigInt not supported\nfunction defineBigIntMethod (fn) {\n  return typeof BigInt === 'undefined' ? BufferBigIntNotDefined : fn\n}\n\nfunction BufferBigIntNotDefined () {\n  throw new Error('BigInt not supported')\n}\n","/*! ieee754. BSD-3-Clause License. Feross Aboukhadijeh <https://feross.org/opensource> */\nexports.read = function (buffer, offset, isLE, mLen, nBytes) {\n  var e, m\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var nBits = -7\n  var i = isLE ? (nBytes - 1) : 0\n  var d = isLE ? -1 : 1\n  var s = buffer[offset + i]\n\n  i += d\n\n  e = s & ((1 << (-nBits)) - 1)\n  s >>= (-nBits)\n  nBits += eLen\n  for (; nBits > 0; e = (e * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  m = e & ((1 << (-nBits)) - 1)\n  e >>= (-nBits)\n  nBits += mLen\n  for (; nBits > 0; m = (m * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  if (e === 0) {\n    e = 1 - eBias\n  } else if (e === eMax) {\n    return m ? NaN : ((s ? -1 : 1) * Infinity)\n  } else {\n    m = m + Math.pow(2, mLen)\n    e = e - eBias\n  }\n  return (s ? -1 : 1) * m * Math.pow(2, e - mLen)\n}\n\nexports.write = function (buffer, value, offset, isLE, mLen, nBytes) {\n  var e, m, c\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var rt = (mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0)\n  var i = isLE ? 0 : (nBytes - 1)\n  var d = isLE ? 1 : -1\n  var s = value < 0 || (value === 0 && 1 / value < 0) ? 1 : 0\n\n  value = Math.abs(value)\n\n  if (isNaN(value) || value === Infinity) {\n    m = isNaN(value) ? 1 : 0\n    e = eMax\n  } else {\n    e = Math.floor(Math.log(value) / Math.LN2)\n    if (value * (c = Math.pow(2, -e)) < 1) {\n      e--\n      c *= 2\n    }\n    if (e + eBias >= 1) {\n      value += rt / c\n    } else {\n      value += rt * Math.pow(2, 1 - eBias)\n    }\n    if (value * c >= 2) {\n      e++\n      c /= 2\n    }\n\n    if (e + eBias >= eMax) {\n      m = 0\n      e = eMax\n    } else if (e + eBias >= 1) {\n      m = ((value * c) - 1) * Math.pow(2, mLen)\n      e = e + eBias\n    } else {\n      m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen)\n      e = 0\n    }\n  }\n\n  for (; mLen >= 8; buffer[offset + i] = m & 0xff, i += d, m /= 256, mLen -= 8) {}\n\n  e = (e << mLen) | m\n  eLen += mLen\n  for (; eLen > 0; buffer[offset + i] = e & 0xff, i += d, e /= 256, eLen -= 8) {}\n\n  buffer[offset + i - d] |= s * 128\n}\n","'use strict';\n\nvar ip = exports;\nvar Buffer = require('buffer').Buffer;\nvar os = require('os');\n\nip.toBuffer = function(ip, buff, offset) {\n  offset = ~~offset;\n\n  var result;\n\n  if (this.isV4Format(ip)) {\n    result = buff || new Buffer(offset + 4);\n    ip.split(/\\./g).map(function(byte) {\n      result[offset++] = parseInt(byte, 10) & 0xff;\n    });\n  } else if (this.isV6Format(ip)) {\n    var sections = ip.split(':', 8);\n\n    var i;\n    for (i = 0; i < sections.length; i++) {\n      var isv4 = this.isV4Format(sections[i]);\n      var v4Buffer;\n\n      if (isv4) {\n        v4Buffer = this.toBuffer(sections[i]);\n        sections[i] = v4Buffer.slice(0, 2).toString('hex');\n      }\n\n      if (v4Buffer && ++i < 8) {\n        sections.splice(i, 0, v4Buffer.slice(2, 4).toString('hex'));\n      }\n    }\n\n    if (sections[0] === '') {\n      while (sections.length < 8) sections.unshift('0');\n    } else if (sections[sections.length - 1] === '') {\n      while (sections.length < 8) sections.push('0');\n    } else if (sections.length < 8) {\n      for (i = 0; i < sections.length && sections[i] !== ''; i++);\n      var argv = [ i, 1 ];\n      for (i = 9 - sections.length; i > 0; i--) {\n        argv.push('0');\n      }\n      sections.splice.apply(sections, argv);\n    }\n\n    result = buff || new Buffer(offset + 16);\n    for (i = 0; i < sections.length; i++) {\n      var word = parseInt(sections[i], 16);\n      result[offset++] = (word >> 8) & 0xff;\n      result[offset++] = word & 0xff;\n    }\n  }\n\n  if (!result) {\n    throw Error('Invalid ip address: ' + ip);\n  }\n\n  return result;\n};\n\nip.toString = function(buff, offset, length) {\n  offset = ~~offset;\n  length = length || (buff.length - offset);\n\n  var result = [];\n  if (length === 4) {\n    // IPv4\n    for (var i = 0; i < length; i++) {\n      result.push(buff[offset + i]);\n    }\n    result = result.join('.');\n  } else if (length === 16) {\n    // IPv6\n    for (var i = 0; i < length; i += 2) {\n      result.push(buff.readUInt16BE(offset + i).toString(16));\n    }\n    result = result.join(':');\n    result = result.replace(/(^|:)0(:0)*:0(:|$)/, '$1::$3');\n    result = result.replace(/:{3,4}/, '::');\n  }\n\n  return result;\n};\n\nvar ipv4Regex = /^(\\d{1,3}\\.){3,3}\\d{1,3}$/;\nvar ipv6Regex =\n    /^(::)?(((\\d{1,3}\\.){3}(\\d{1,3}){1})?([0-9a-f]){0,4}:{0,2}){1,8}(::)?$/i;\n\nip.isV4Format = function(ip) {\n  return ipv4Regex.test(ip);\n};\n\nip.isV6Format = function(ip) {\n  return ipv6Regex.test(ip);\n};\nfunction _normalizeFamily(family) {\n  return family ? family.toLowerCase() : 'ipv4';\n}\n\nip.fromPrefixLen = function(prefixlen, family) {\n  if (prefixlen > 32) {\n    family = 'ipv6';\n  } else {\n    family = _normalizeFamily(family);\n  }\n\n  var len = 4;\n  if (family === 'ipv6') {\n    len = 16;\n  }\n  var buff = new Buffer(len);\n\n  for (var i = 0, n = buff.length; i < n; ++i) {\n    var bits = 8;\n    if (prefixlen < 8) {\n      bits = prefixlen;\n    }\n    prefixlen -= bits;\n\n    buff[i] = ~(0xff >> bits) & 0xff;\n  }\n\n  return ip.toString(buff);\n};\n\nip.mask = function(addr, mask) {\n  addr = ip.toBuffer(addr);\n  mask = ip.toBuffer(mask);\n\n  var result = new Buffer(Math.max(addr.length, mask.length));\n\n  var i = 0;\n  // Same protocol - do bitwise and\n  if (addr.length === mask.length) {\n    for (i = 0; i < addr.length; i++) {\n      result[i] = addr[i] & mask[i];\n    }\n  } else if (mask.length === 4) {\n    // IPv6 address and IPv4 mask\n    // (Mask low bits)\n    for (i = 0; i < mask.length; i++) {\n      result[i] = addr[addr.length - 4  + i] & mask[i];\n    }\n  } else {\n    // IPv6 mask and IPv4 addr\n    for (var i = 0; i < result.length - 6; i++) {\n      result[i] = 0;\n    }\n\n    // ::ffff:ipv4\n    result[10] = 0xff;\n    result[11] = 0xff;\n    for (i = 0; i < addr.length; i++) {\n      result[i + 12] = addr[i] & mask[i + 12];\n    }\n    i = i + 12;\n  }\n  for (; i < result.length; i++)\n    result[i] = 0;\n\n  return ip.toString(result);\n};\n\nip.cidr = function(cidrString) {\n  var cidrParts = cidrString.split('/');\n\n  var addr = cidrParts[0];\n  if (cidrParts.length !== 2)\n    throw new Error('invalid CIDR subnet: ' + addr);\n\n  var mask = ip.fromPrefixLen(parseInt(cidrParts[1], 10));\n\n  return ip.mask(addr, mask);\n};\n\nip.subnet = function(addr, mask) {\n  var networkAddress = ip.toLong(ip.mask(addr, mask));\n\n  // Calculate the mask's length.\n  var maskBuffer = ip.toBuffer(mask);\n  var maskLength = 0;\n\n  for (var i = 0; i < maskBuffer.length; i++) {\n    if (maskBuffer[i] === 0xff) {\n      maskLength += 8;\n    } else {\n      var octet = maskBuffer[i] & 0xff;\n      while (octet) {\n        octet = (octet << 1) & 0xff;\n        maskLength++;\n      }\n    }\n  }\n\n  var numberOfAddresses = Math.pow(2, 32 - maskLength);\n\n  return {\n    networkAddress: ip.fromLong(networkAddress),\n    firstAddress: numberOfAddresses <= 2 ?\n                    ip.fromLong(networkAddress) :\n                    ip.fromLong(networkAddress + 1),\n    lastAddress: numberOfAddresses <= 2 ?\n                    ip.fromLong(networkAddress + numberOfAddresses - 1) :\n                    ip.fromLong(networkAddress + numberOfAddresses - 2),\n    broadcastAddress: ip.fromLong(networkAddress + numberOfAddresses - 1),\n    subnetMask: mask,\n    subnetMaskLength: maskLength,\n    numHosts: numberOfAddresses <= 2 ?\n                numberOfAddresses : numberOfAddresses - 2,\n    length: numberOfAddresses,\n    contains: function(other) {\n      return networkAddress === ip.toLong(ip.mask(other, mask));\n    }\n  };\n};\n\nip.cidrSubnet = function(cidrString) {\n  var cidrParts = cidrString.split('/');\n\n  var addr = cidrParts[0];\n  if (cidrParts.length !== 2)\n    throw new Error('invalid CIDR subnet: ' + addr);\n\n  var mask = ip.fromPrefixLen(parseInt(cidrParts[1], 10));\n\n  return ip.subnet(addr, mask);\n};\n\nip.not = function(addr) {\n  var buff = ip.toBuffer(addr);\n  for (var i = 0; i < buff.length; i++) {\n    buff[i] = 0xff ^ buff[i];\n  }\n  return ip.toString(buff);\n};\n\nip.or = function(a, b) {\n  a = ip.toBuffer(a);\n  b = ip.toBuffer(b);\n\n  // same protocol\n  if (a.length === b.length) {\n    for (var i = 0; i < a.length; ++i) {\n      a[i] |= b[i];\n    }\n    return ip.toString(a);\n\n  // mixed protocols\n  } else {\n    var buff = a;\n    var other = b;\n    if (b.length > a.length) {\n      buff = b;\n      other = a;\n    }\n\n    var offset = buff.length - other.length;\n    for (var i = offset; i < buff.length; ++i) {\n      buff[i] |= other[i - offset];\n    }\n\n    return ip.toString(buff);\n  }\n};\n\nip.isEqual = function(a, b) {\n  a = ip.toBuffer(a);\n  b = ip.toBuffer(b);\n\n  // Same protocol\n  if (a.length === b.length) {\n    for (var i = 0; i < a.length; i++) {\n      if (a[i] !== b[i]) return false;\n    }\n    return true;\n  }\n\n  // Swap\n  if (b.length === 4) {\n    var t = b;\n    b = a;\n    a = t;\n  }\n\n  // a - IPv4, b - IPv6\n  for (var i = 0; i < 10; i++) {\n    if (b[i] !== 0) return false;\n  }\n\n  var word = b.readUInt16BE(10);\n  if (word !== 0 && word !== 0xffff) return false;\n\n  for (var i = 0; i < 4; i++) {\n    if (a[i] !== b[i + 12]) return false;\n  }\n\n  return true;\n};\n\nip.isPrivate = function(addr) {\n  return /^(::f{4}:)?10\\.([0-9]{1,3})\\.([0-9]{1,3})\\.([0-9]{1,3})$/i\n      .test(addr) ||\n    /^(::f{4}:)?192\\.168\\.([0-9]{1,3})\\.([0-9]{1,3})$/i.test(addr) ||\n    /^(::f{4}:)?172\\.(1[6-9]|2\\d|30|31)\\.([0-9]{1,3})\\.([0-9]{1,3})$/i\n      .test(addr) ||\n    /^(::f{4}:)?127\\.([0-9]{1,3})\\.([0-9]{1,3})\\.([0-9]{1,3})$/i.test(addr) ||\n    /^(::f{4}:)?169\\.254\\.([0-9]{1,3})\\.([0-9]{1,3})$/i.test(addr) ||\n    /^f[cd][0-9a-f]{2}:/i.test(addr) ||\n    /^fe80:/i.test(addr) ||\n    /^::1$/.test(addr) ||\n    /^::$/.test(addr);\n};\n\nip.isPublic = function(addr) {\n  return !ip.isPrivate(addr);\n};\n\nip.isLoopback = function(addr) {\n  return /^(::f{4}:)?127\\.([0-9]{1,3})\\.([0-9]{1,3})\\.([0-9]{1,3})/\n      .test(addr) ||\n    /^fe80::1$/.test(addr) ||\n    /^::1$/.test(addr) ||\n    /^::$/.test(addr);\n};\n\nip.loopback = function(family) {\n  //\n  // Default to `ipv4`\n  //\n  family = _normalizeFamily(family);\n\n  if (family !== 'ipv4' && family !== 'ipv6') {\n    throw new Error('family must be ipv4 or ipv6');\n  }\n\n  return family === 'ipv4' ? '127.0.0.1' : 'fe80::1';\n};\n\n//\n// ### function address (name, family)\n// #### @name {string|'public'|'private'} **Optional** Name or security\n//      of the network interface.\n// #### @family {ipv4|ipv6} **Optional** IP family of the address (defaults\n//      to ipv4).\n//\n// Returns the address for the network interface on the current system with\n// the specified `name`:\n//   * String: First `family` address of the interface.\n//             If not found see `undefined`.\n//   * 'public': the first public ip address of family.\n//   * 'private': the first private ip address of family.\n//   * undefined: First address with `ipv4` or loopback address `127.0.0.1`.\n//\nip.address = function(name, family) {\n  var interfaces = os.networkInterfaces();\n  var all;\n\n  //\n  // Default to `ipv4`\n  //\n  family = _normalizeFamily(family);\n\n  //\n  // If a specific network interface has been named,\n  // return the address.\n  //\n  if (name && name !== 'private' && name !== 'public') {\n    var res = interfaces[name].filter(function(details) {\n      var itemFamily = details.family.toLowerCase();\n      return itemFamily === family;\n    });\n    if (res.length === 0)\n      return undefined;\n    return res[0].address;\n  }\n\n  var all = Object.keys(interfaces).map(function (nic) {\n    //\n    // Note: name will only be `public` or `private`\n    // when this is called.\n    //\n    var addresses = interfaces[nic].filter(function (details) {\n      details.family = details.family.toLowerCase();\n      if (details.family !== family || ip.isLoopback(details.address)) {\n        return false;\n      } else if (!name) {\n        return true;\n      }\n\n      return name === 'public' ? ip.isPrivate(details.address) :\n          ip.isPublic(details.address);\n    });\n\n    return addresses.length ? addresses[0].address : undefined;\n  }).filter(Boolean);\n\n  return !all.length ? ip.loopback(family) : all[0];\n};\n\nip.toLong = function(ip) {\n  var ipl = 0;\n  ip.split('.').forEach(function(octet) {\n    ipl <<= 8;\n    ipl += parseInt(octet);\n  });\n  return(ipl >>> 0);\n};\n\nip.fromLong = function(ipl) {\n  return ((ipl >>> 24) + '.' +\n      (ipl >> 16 & 255) + '.' +\n      (ipl >> 8 & 255) + '.' +\n      (ipl & 255) );\n};\n","exports.endianness = function () { return 'LE' };\n\nexports.hostname = function () {\n    if (typeof location !== 'undefined') {\n        return location.hostname\n    }\n    else return '';\n};\n\nexports.loadavg = function () { return [] };\n\nexports.uptime = function () { return 0 };\n\nexports.freemem = function () {\n    return Number.MAX_VALUE;\n};\n\nexports.totalmem = function () {\n    return Number.MAX_VALUE;\n};\n\nexports.cpus = function () { return [] };\n\nexports.type = function () { return 'Browser' };\n\nexports.release = function () {\n    if (typeof navigator !== 'undefined') {\n        return navigator.appVersion;\n    }\n    return '';\n};\n\nexports.networkInterfaces\n= exports.getNetworkInterfaces\n= function () { return {} };\n\nexports.arch = function () { return 'javascript' };\n\nexports.platform = function () { return 'browser' };\n\nexports.tmpdir = exports.tmpDir = function () {\n    return '/tmp';\n};\n\nexports.EOL = '\\n';\n\nexports.homedir = function () {\n\treturn '/'\n};\n","import bitcodec from \"../../src\";\nimport { IBitcodec } from \"../models/IBitcodec\";\n\nclass _BooleanCodec implements IBitcodec<boolean> {\n  private byteCodec = bitcodec.Number.UInt8;\n  encodeBytes: number = 1;\n  decodeBytes: number = 1;\n  encodingLength = (t?: any) => 1;\n  encode = (value: boolean, buffer?: Buffer, offset?: number): Buffer => this.byteCodec.encode(+!!value, buffer, offset);\n  decode = (buffer: Buffer, offset?: number, end?: number): boolean => !!this.byteCodec.decode(buffer, offset, end);\n}\n\nexport const BooleanCodec = new _BooleanCodec();\n","import * as ip from \"ip\";\nimport { IBitcodec } from \"../models/IBitcodec\";\n\nexport class IpCodec implements IBitcodec<string> {\n  private IPV4_PREFIX = Buffer.from(\"00000000000000000000ffff\", \"hex\");\n  encodeBytes: number = 16;\n  decodeBytes: number = 16;\n  encodingLength = (t?: any) => 16;\n\n  encode = (value: string, buffer?: Buffer | undefined, offset?: number | undefined): Buffer => {\n    if (!buffer) buffer = Buffer.alloc(16);\n    if (!offset) offset = 0;\n    if (offset + 16 > buffer.length) throw new RangeError(\"destination buffer is too small\");\n\n    if (ip.isV4Format(value)) {\n      this.IPV4_PREFIX.copy(buffer, offset);\n      ip.toBuffer(value, buffer, offset + 12);\n    } else if (ip.isV6Format(value)) {\n      ip.toBuffer(value, buffer, offset);\n    } else {\n      throw Error(\"Invalid IP address value\");\n    }\n\n    return buffer;\n  };\n\n  decode = (buffer: Buffer, offset?: number | undefined, end?: number | undefined): string => {\n    if (!offset) offset = 0;\n    if (!end) end = buffer.length;\n    if (offset + 16 > end) throw new RangeError(\"not enough data for decode\");\n\n    let start = buffer.slice(offset, offset + 12).equals(this.IPV4_PREFIX) ? 12 : 0;\n    return ip.toString(buffer.slice(offset + start, offset + 16));\n  };\n}\n","import bitcodec from \"../\";\nimport { IBitcodec } from \"../models/IBitcodec\";\n\nexport class MessageCommandCodec implements IBitcodec<string> {\n  private buffer12 = bitcodec.Buffer(12);\n\n  encodeBytes: number;\n  decodeBytes: number;\n  encodingLength: (t?: string | undefined) => number;\n\n  constructor() {\n    this.encodeBytes = this.buffer12.encodeBytes;\n    this.decodeBytes = this.buffer12.decodeBytes;\n    this.encodingLength = this.buffer12.encodingLength;\n  }\n\n  encode = (value: string, buffer?: Buffer, offset?: number): Buffer => {\n    const bvalue = Buffer.from(value, \"ascii\");\n    const nvalue = Buffer.alloc(12);\n    bvalue.copy(nvalue, 0);\n    for (let i = bvalue.length; i < nvalue.length; ++i) nvalue[i] = 0;\n    return this.buffer12.encode(nvalue, buffer, offset);\n  };\n\n  decode = (buffer: Buffer, offset?: number, end?: number): string => {\n    const bvalue = this.buffer12.decode(buffer, offset, end);\n\n    let stop;\n    for (stop = 0; bvalue[stop] !== 0; ++stop) {\n      if (stop === 11) {\n        throw Error(\"Non-terminated string. Are you sure this is a Bitcoin packet?\");\n      }\n    }\n\n    for (let i = stop; i < bvalue.length; ++i) {\n      if (bvalue[i] !== 0) {\n        throw Error(\"Found a non-null byte after the first null byte in a null-padded string\");\n      }\n    }\n    return bvalue.slice(0, stop).toString(\"ascii\");\n  };\n}\n","import bitcodec from \"../\";\nimport { buffer2hex, hex2buffer } from \"../bitcoin/helper\";\nimport { MessageCommandCodec } from \"./MessageCommandCodec\";\nimport { MessageHeader } from \"./models/p2p/MessageHeader\";\n\nconst _MessageHeaderCodec = bitcodec.Object([\n  [\"startString\", bitcodec.Number.UInt32LE],\n  [\"commandName\", new MessageCommandCodec()],\n  [\"payloadSize\", bitcodec.Number.UInt32LE],\n  [\"checksum\", bitcodec.Buffer(4)],\n  [\"payload\", bitcodec.AllBuffer],\n]);\n\nexport const MessageHeaderCodec = {\n  decode: (hex: string): MessageHeader<string> => {\n    return buffer2hex(_MessageHeaderCodec.decode(hex2buffer(hex)));\n  },\n\n  encode: (obj: MessageHeader<string>): string => {\n    return buffer2hex(_MessageHeaderCodec.encode(hex2buffer(obj)));\n  },\n};\n","import { toTxSegwit, toTxSegwitBase } from \"./converter\";\nimport { buffer2hex, hex2buffer } from \"./helper\";\nimport { TxStandart, TxSegwit, TxSegwitBase, TxSegwitParsed } from \"./models/Tx\";\n\nimport { Tx, TxWitnessBase } from \"./someCodecs\";\nimport { WitnessLocktimeCodec } from \"./WitnessLocktimeCodec\";\n\nexport const TxCodec = {\n  encode: (txObject: TxStandart | TxSegwit): string => {\n    const txObjectHex = hex2buffer(txObject);\n    let resultBuffer: Buffer = Buffer.alloc(0);\n\n    const standartTx = (txObject as TxSegwit).marker === undefined;\n    if (standartTx) {\n      resultBuffer = Tx.encode(txObjectHex);\n    } else {\n      const witnessLocktimeCodec = new WitnessLocktimeCodec(txObject.txIn.length);\n      const witnessArray = (txObject as TxSegwit).txIn.map((txi) => txi.witnessScripts);\n      const witnessLocktimeHexBuffer = witnessLocktimeCodec.encode(\n        hex2buffer({ witnessScriptsArray: witnessArray, lockTime: txObject.lockTime } as { witnessScriptsArray: string[][]; lockTime: number })\n      );\n      const witnessLocktimeHex = buffer2hex(witnessLocktimeHexBuffer) as string;\n\n      const txSegwitBase: TxSegwitBase = toTxSegwitBase(txObject as TxSegwit, witnessLocktimeHex);\n      resultBuffer = TxWitnessBase.encode(hex2buffer(txSegwitBase));\n    }\n\n    const resultHex = buffer2hex(resultBuffer) as string;\n    return resultHex;\n  },\n\n  decode: (txHex: string): TxStandart | TxSegwit => {\n    const txBuffer = hex2buffer(txHex) as Buffer;\n    let resultBuffer: any;\n\n    const standartTx = txHex.substr(8, 4) !== \"0001\";\n    if (standartTx) {\n      resultBuffer = Tx.decode(txBuffer);\n      const txStandart = buffer2hex(resultBuffer) as TxStandart;\n      return txStandart;\n    } else {\n      const txWitnessBaseBuffer = TxWitnessBase.decode(txBuffer);\n      const txWitnessBase = buffer2hex(txWitnessBaseBuffer) as TxSegwitBase;\n\n      const witnessLocktimeCodec = new WitnessLocktimeCodec(txWitnessBase.txIn.length);\n      const witnessLocktimeDataBuffer: { witnessScriptsArray: string[][]; lockTime: number } = witnessLocktimeCodec.decode(hex2buffer(txWitnessBase.witnessScripts_lockTime));\n      const witnessLocktimeData = buffer2hex(witnessLocktimeDataBuffer) as { witnessScriptsArray: string[][]; lockTime: number };\n\n      const txSegwitParsed: TxSegwitParsed = {\n        version: txWitnessBase.version,\n        marker: txWitnessBase.marker,\n        flag: txWitnessBase.flag,\n        txIn: txWitnessBase.txIn,\n        txOut: txWitnessBase.txOut,\n        witnessScriptsArray: witnessLocktimeData.witnessScriptsArray,\n        lockTime: witnessLocktimeData.lockTime,\n      };\n      const txSegwit = toTxSegwit(txSegwitParsed);\n      return txSegwit;\n    }\n  },\n};\n","import bitcodec from \"../../src\";\nimport { BooleanCodec } from \"./BooleanCodec\";\nimport { IpCodec } from \"./IpCodec\";\n\nconst addr = bitcodec.Object([\n  [\"services\", bitcodec.Buffer(8)],\n  [\"iPAddress\", new IpCodec()],\n  [\"port\", bitcodec.Number.UInt16BE],\n]);\n\nexport const VersionCodec = bitcodec.Object([\n  [\"version\", bitcodec.Number.UInt32LE],\n  [\"services\", bitcodec.Buffer(8)],\n  [\"timestamp\", bitcodec.Number.UInt64LE],\n  [\"addrRecv\", addr],\n  [\"addrTrans\", addr],\n  [\"nonce\", bitcodec.Buffer(8)],\n  [\"userAgent\", bitcodec.VarString(bitcodec.VarUIntBitcoin, \"ascii\")],\n  [\"startHeight\", bitcodec.Number.Int32LE],\n  [\"relay\", BooleanCodec],\n]);\n","import bitcodec from \"../\";\nimport { IBitcodec } from \"../models/IBitcodec\";\nimport { buffer2hex, hex2buffer } from \"./helper\";\n\nexport class WitnessLocktimeCodec implements IBitcodec<{ witnessScriptsArray: string[][]; lockTime: number }> {\n  private witnessLocktimeData = bitcodec.Object([\n    [\"witnessScriptsArray\", bitcodec.VarArray(bitcodec.VarUIntBitcoin, bitcodec.VarArray(bitcodec.VarUIntBitcoin, bitcodec.VarBuffer(bitcodec.VarUIntBitcoin)))],\n    [\"lockTime\", bitcodec.Number.UInt32LE],\n  ]);\n  private inputsCount;\n\n  encodeBytes: number;\n  decodeBytes: number;\n  encodingLength: (t?: any) => number;\n\n  constructor(inputsCount: number) {\n    this.inputsCount = inputsCount;\n    this.encodeBytes = this.witnessLocktimeData.encodeBytes;\n    this.decodeBytes = this.witnessLocktimeData.decodeBytes;\n    this.encodingLength = this.witnessLocktimeData.encodingLength;\n  }\n\n  encode = (value: any, buffer?: Buffer | undefined, offset?: number | undefined): Buffer => {\n    const result = this.witnessLocktimeData.encode(value, buffer, offset).slice(1);\n\n    this.encodeBytes = this.witnessLocktimeData.encodeBytes;\n    this.decodeBytes = this.witnessLocktimeData.decodeBytes;\n    this.encodingLength = this.witnessLocktimeData.encodingLength;\n\n    return result;\n  };\n\n  decode = (buffer: Buffer, offset?: number | undefined, end?: number | undefined): { witnessScriptsArray: string[][]; lockTime: number } => {\n    const inputCountHex = this.inputsCount.toString(16).padStart(2, \"0\");\n    const bufferHex = buffer2hex(buffer);\n    const newBuffer = hex2buffer(inputCountHex + bufferHex);\n    const result = this.witnessLocktimeData.decode(newBuffer, offset, end);\n\n    this.encodeBytes = this.witnessLocktimeData.encodeBytes;\n    this.decodeBytes = this.witnessLocktimeData.decodeBytes;\n    this.encodingLength = this.witnessLocktimeData.encodingLength;\n\n    return result as { witnessScriptsArray: string[][]; lockTime: number };\n  };\n}\n","import { TxSegwit, TxSegwitBase, TxSegwitParsed } from \"./models/Tx\";\n\nexport const toTxSegwit = (txSegwitParsed: TxSegwitParsed): TxSegwit => {\n  const txSegwit: TxSegwit = {\n    version: txSegwitParsed.version,\n    marker: txSegwitParsed.marker,\n    flag: txSegwitParsed.flag,\n    txIn: [],\n    txOut: txSegwitParsed.txOut,\n    lockTime: txSegwitParsed.lockTime,\n  };\n\n  txSegwitParsed.txIn.forEach((input, index) => {\n    txSegwit.txIn.push({\n      previousOutput: input.previousOutput,\n      signatureScript: input.signatureScript,\n      witnessScripts: txSegwitParsed.witnessScriptsArray[index],\n      sequence: input.sequence,\n    });\n  });\n\n  return txSegwit;\n};\n\nexport const toTxSegwitParsed = (txSegwit: TxSegwit): TxSegwitParsed => {\n  const txSegwitParsed: TxSegwitParsed = {\n    version: txSegwit.version,\n    marker: txSegwit.marker,\n    flag: txSegwit.flag,\n    txIn: [],\n    txOut: txSegwit.txOut,\n    witnessScriptsArray: [],\n    lockTime: txSegwit.lockTime,\n  };\n\n  txSegwit.txIn.forEach((input, index) => {\n    txSegwitParsed.txIn.push({\n      previousOutput: input.previousOutput,\n      signatureScript: input.signatureScript,\n      sequence: input.sequence,\n    });\n\n    txSegwitParsed.witnessScriptsArray.push(input.witnessScripts);\n  });\n\n  return txSegwitParsed;\n};\n\nexport const toTxSegwitBase = (txSegwit: TxSegwit, witnessLocktimeHex: string): TxSegwitBase => {\n  const txSegwitBase: TxSegwitBase = {\n    version: txSegwit.version,\n    marker: txSegwit.marker,\n    flag: txSegwit.flag,\n    txIn: [],\n    txOut: txSegwit.txOut,\n    witnessScripts_lockTime: witnessLocktimeHex,\n    lockTime: txSegwit.lockTime,\n  };\n\n  txSegwit.txIn.forEach((input, index) => {\n    txSegwitBase.txIn.push({\n      previousOutput: input.previousOutput,\n      signatureScript: input.signatureScript,\n      sequence: input.sequence,\n    });\n  });\n\n  return txSegwitBase;\n};\n","export function buffer2hex(obj: any) {\n  if (Buffer.isBuffer(obj)) return obj.toString(\"hex\");\n  else if (Array.isArray(obj)) obj = obj.map(buffer2hex);\n  else if (typeof obj === \"object\") {\n    for (var k in obj) {\n      obj[k] = buffer2hex(obj[k]);\n    }\n  }\n\n  return obj;\n}\n\nexport function isHex(s: string) {\n  return s.length % 2 === 0 && /^[0-9a-f]*$/.test(s.toLowerCase());\n}\n\nexport function hex2buffer(obj: any) {\n  if (Buffer.isBuffer(obj)) return obj;\n  else if (typeof obj === \"string\" && isHex(obj)) return Buffer.from(obj, \"hex\");\n  else if (typeof obj === \"object\") {\n    for (var k in obj) {\n      obj[k] = hex2buffer(obj[k]);\n    }\n  } else if (Array.isArray(obj)) obj = obj.map(hex2buffer);\n\n  return obj;\n}\n","import bitcodec from \"../\";\n\nconst txVersion = bitcodec.Number.UInt32LE; // int32_t\nconst txInItemPreviousOutput = bitcodec.Object([\n  { name: \"hash\", type: bitcodec.Buffer(32) },\n  { name: \"index\", type: bitcodec.Number.UInt32LE },\n]);\nconst txInItem = bitcodec.Object([\n  { name: \"previousOutput\", type: txInItemPreviousOutput },\n  { name: \"signatureScript\", type: bitcodec.VarBuffer(bitcodec.VarUIntBitcoin) },\n  { name: \"sequence\", type: bitcodec.Number.UInt32LE }, // uint32_t\n]);\nconst txIn = bitcodec.VarArray(bitcodec.VarUIntBitcoin, txInItem);\nconst txOutItem = bitcodec.Object([\n  { name: \"value\", type: bitcodec.Number.UInt64LE }, // int64_t\n  { name: \"pkScript\", type: bitcodec.VarBuffer(bitcodec.VarUIntBitcoin) },\n]);\nconst txOut = bitcodec.VarArray(bitcodec.VarUIntBitcoin, txOutItem);\nconst txLockTime = bitcodec.Number.UInt32LE; // uint32_t\nexport const Tx = bitcodec.Object([\n  { name: \"version\", type: txVersion },\n  { name: \"txIn\", type: txIn }, // compactSize uint\n  { name: \"txOut\", type: txOut }, // compactSize uint\n  { name: \"lockTime\", type: txLockTime },\n]);\nexport const TxWitnessBase = bitcodec.Object([\n  { name: \"version\", type: txVersion },\n  { name: \"marker\", type: bitcodec.Byte },\n  { name: \"flag\", type: bitcodec.Byte },\n  { name: \"txIn\", type: txIn },\n  { name: \"txOut\", type: txOut },\n  { name: \"witnessScripts_lockTime\", type: bitcodec.AllBuffer },\n]);\n\nexport const blockHeader = bitcodec.Object([\n  { name: \"version\", type: bitcodec.Number.UInt32LE }, // uint32_t\n  { name: \"previousBlockHeaderHash\", type: bitcodec.Buffer(32) },\n  { name: \"merkleRootHash\", type: bitcodec.Buffer(32) },\n  { name: \"time\", type: bitcodec.Number.UInt32LE }, // uint32_t\n  { name: \"nBits\", type: bitcodec.Number.UInt32LE }, // uint32_t\n  { name: \"nonce\", type: bitcodec.Number.UInt32LE }, // uint32_t\n]);\n","import { IBitcodec } from \"./models/IBitcodec\";\nimport { BitcodecItem } from \"./models/BitcodecItem\";\nimport { EncodingType } from \"./models/EncodingType\";\nimport { NumberTypes } from \"./models/NumberTypes\";\n\nimport { CAllBuffer } from \"./lib/CAllBuffer\";\nimport { CArray } from \"./lib/CArray\";\nimport { CBuffer } from \"./lib/CBuffer\";\nimport { CNumber } from \"./lib/CNumber\";\nimport { CObject } from \"./lib/CObject\";\nimport { CString } from \"./lib/CString\";\nimport { CVarArray } from \"./lib/CVarArray\";\nimport { CVarBuffer } from \"./lib/CVarBuffer\";\nimport { CVarString } from \"./lib/CVarString\";\nimport { CVarUIntBitcoin } from \"./lib/CVarUIntBitcoin\";\n\nexport default {\n  AllBuffer: new CAllBuffer(),\n  Array: (length: number, anyCodec: IBitcodec<any>) => new CArray(length, anyCodec),\n  Buffer: (length: number) => new CBuffer(length),\n  Byte: new CNumber(NumberTypes.UInt8, 1),\n  Number: {\n    Int8: new CNumber(NumberTypes.Int8, 1),\n    UInt8: new CNumber(NumberTypes.UInt8, 1),\n    Int16BE: new CNumber(NumberTypes.Int16BE, 2),\n    Int16LE: new CNumber(NumberTypes.Int16LE, 2),\n    UInt16BE: new CNumber(NumberTypes.UInt16BE, 2),\n    UInt16LE: new CNumber(NumberTypes.UInt16LE, 2),\n    Int32BE: new CNumber(NumberTypes.Int32BE, 4),\n    Int32LE: new CNumber(NumberTypes.Int32LE, 4),\n    UInt32BE: new CNumber(NumberTypes.UInt32BE, 4),\n    UInt32LE: new CNumber(NumberTypes.UInt32LE, 4),\n    Int64BE: new CNumber(NumberTypes.Int64BE, 8),\n    Int64LE: new CNumber(NumberTypes.Int64LE, 8),\n    UInt64BE: new CNumber(NumberTypes.UInt64BE, 8),\n    UInt64LE: new CNumber(NumberTypes.UInt64LE, 8),\n    FloatBE: new CNumber(NumberTypes.FloatBE, 4),\n    FloatLE: new CNumber(NumberTypes.FloatLE, 4),\n    DoubleBE: new CNumber(NumberTypes.DoubleBE, 8),\n    DoubleLE: new CNumber(NumberTypes.DoubleLE, 8),\n  },\n  Object: (items: BitcodecItem[]) => new CObject(items),\n  String: (length: number, encodingType: EncodingType = \"utf8\") => new CString(length, encodingType),\n  VarArray: (lengthType: IBitcodec<any>, anyCodec: IBitcodec<any>) => new CVarArray(lengthType, anyCodec),\n  VarBuffer: (anyCodec: IBitcodec<any>) => new CVarBuffer(anyCodec),\n  VarString: (anyCodec: IBitcodec<any>, encodingType: EncodingType = \"utf8\") => new CVarString(anyCodec, encodingType),\n  VarUIntBitcoin: new CVarUIntBitcoin(),\n};\n","import { IBitcodec } from \"../models/IBitcodec\";\n\nexport class CAllBuffer implements IBitcodec<Buffer> {\n  private length: number;\n  encodingLength = (): number => this.length;\n\n  encodeBytes: number;\n  decodeBytes: number;\n\n  constructor() {\n    this.length = 0;\n    this.encodeBytes = 0;\n    this.decodeBytes = 0;\n  }\n\n  encode = (value: Buffer, buffer?: Buffer, offset = 0): Buffer => {\n    if (!Buffer.isBuffer(value)) throw new TypeError(\"value must be a Buffer instance\"); // for CArray encode iter\n    this.length = value.length - offset;\n    if (!buffer) return Buffer.from(value);\n    if (offset + this.length > buffer.length) throw new RangeError(\"destination buffer is too small\");\n    value.copy(buffer, offset);\n    return buffer;\n  };\n\n  decode = (buffer: Buffer, offset = 0, end?: number): Buffer => {\n    if (!end) end = buffer.length;\n    this.length = buffer.length - offset;\n    if (offset + this.length > end) throw new RangeError(\"not enough data for decode\");\n    return Buffer.from(buffer.slice(offset, offset + this.length));\n  };\n}\n","import * as util from \"../util\";\nimport { IBitcodec } from \"../models/IBitcodec\";\nimport { CBuffer } from \"./CBuffer\";\n\nexport class CArray implements IBitcodec<any[]> {\n  private length: number;\n  private anyCodec: IBitcodec<any>;\n\n  private calcLength = (items: any[]) => {\n    return util.size(items, this.anyCodec.encodingLength);\n  };\n\n  encodingLength = (array?: any[]): number => {\n    if (array === undefined) throw new TypeError(\"value must be an Array instance\");\n    if (array.length !== this.length) throw new RangeError(\"value.length is out of bounds\");\n    return this.calcLength(array);\n  };\n\n  encodeBytes: number;\n  decodeBytes: number;\n\n  constructor(length: number, anyCodec: IBitcodec<any>) {\n    this.length = length;\n    this.anyCodec = anyCodec;\n    this.encodeBytes = length;\n    this.decodeBytes = length;\n  }\n\n  encode = (value: any[], buffer?: Buffer, offset = 0): Buffer => {\n    if (value.length !== this.length) throw new RangeError(\"value.length is out of bounds\");\n    if (!buffer) buffer = Buffer.allocUnsafe(this.calcLength(value));\n\n    const typeEncode = this.anyCodec.encode;\n    const typeEncodeBytes = this.anyCodec.encodeBytes;\n\n    /* this.encodeBytes =\n      value.reduce((previusValue, currentItem, _) => {\n        this.anyCodec.encode(currentItem, buffer, previusValue);\n        const newAnyCodecEncodeBytes = this.anyCodec.encodeBytes;\n        return previusValue + newAnyCodecEncodeBytes;\n      }, offset) - offset; */\n\n    this.encodeBytes =\n      util.size(\n        value,\n        function (item, index, loffset) {\n          typeEncode(item, buffer, loffset);\n          return typeEncodeBytes;\n        },\n        offset\n      ) - offset;\n    return buffer;\n  };\n\n  decode = (buffer: Buffer, offset = 0, end?: number): any[] => {\n    if (!offset) offset = 0;\n    const items = new Array(this.length);\n\n    const typeDecode = this.anyCodec.decode;\n    const typeDecodeBytes = this.anyCodec.decodeBytes;\n\n    /* this.decodeBytes =\n      items.reduce((previusValue, currentItem, currentIndex) => {\n        items[currentIndex] = this.anyCodec.decode(buffer, previusValue, end);\n        const newAnyCodecDecodeBytes = this.anyCodec.decodeBytes;\n        return previusValue + newAnyCodecDecodeBytes;\n      }, offset + offset) - offset; */\n\n    this.decodeBytes =\n      util.size(\n        items,\n        function (item, index, loffset) {\n          items[index || 0] = typeDecode(buffer, loffset, end);\n          return typeDecodeBytes;\n        },\n        offset\n      ) - offset;\n    return items;\n  };\n}\n","import { IBitcodec } from \"../models/IBitcodec\";\n\nexport class CBuffer implements IBitcodec<Buffer> {\n  private length: number;\n  encodingLength = (): number => this.length;\n\n  encodeBytes: number;\n  decodeBytes: number;\n\n  constructor(length: number) {\n    this.length = length;\n    this.encodeBytes = length;\n    this.decodeBytes = length;\n  }\n\n  encode = (value: Buffer, buffer?: Buffer, offset = 0): Buffer => {\n    if (!Buffer.isBuffer(value)) throw new TypeError(\"value must be a Buffer instance\"); // for CArray encode iter\n    if (value.length !== this.length) throw new RangeError(\"value.length is out of bounds\");\n    if (!buffer) return Buffer.from(value);\n    if (offset + this.length > buffer.length) throw new RangeError(\"destination buffer is too small\");\n    value.copy(buffer, offset);\n    return buffer;\n  };\n\n  decode = (buffer: Buffer, offset = 0, end?: number): Buffer => {\n    if (!end) end = buffer.length;\n    if (offset + this.length > end) throw new RangeError(\"not enough data for decode\");\n    return Buffer.from(buffer.slice(offset, offset + this.length));\n  };\n}\n","import { Int53Type, readInt53, writeInt53 } from \"@bitmatrix/int53\";\nimport { IBitcodec } from \"../models/IBitcodec\";\nimport { NumberTypes } from \"../models/NumberTypes\";\n\nexport class CNumber implements IBitcodec<number> {\n  private length: number;\n  private write: (buffer: Buffer, value: number, offset?: number) => void;\n  private read: (buffer: Buffer, offset?: number | undefined) => number;\n\n  encodingLength = (): number => this.length;\n\n  encodeBytes: number;\n  decodeBytes: number;\n\n  constructor(numberType: NumberTypes, length: number) {\n    this.length = length;\n    this.encodeBytes = length;\n    this.decodeBytes = length;\n\n    if (Buffer.prototype[\"write\" + numberType]) {\n      this.write = (buffer: Buffer, value: number, offset?: number) => {\n        return (buffer as any)[\"write\" + numberType](value, offset);\n      };\n    } else {\n      this.write = (buffer: Buffer, value: number, offset?: number) => {\n        return writeInt53(numberType as unknown as Int53Type, value, buffer, offset);\n      };\n    }\n\n    if (Buffer.prototype[\"read\" + numberType]) {\n      this.read = (buffer: Buffer, offset?: number) => {\n        return (buffer as any)[\"read\" + numberType](offset);\n      };\n    } else {\n      this.read = (buffer: Buffer, offset?: number) => {\n        return readInt53(numberType as unknown as Int53Type, buffer, offset);\n      };\n    }\n  }\n\n  encode = (value: number, buffer?: Buffer, offset = 0): Buffer => {\n    buffer = buffer || Buffer.allocUnsafe(this.length);\n\n    this.write(buffer, value, offset);\n    return buffer;\n  };\n\n  decode = (buffer: Buffer, offset = 0, end?: number): number => {\n    if (!end) return this.read(buffer, offset);\n    return this.read(buffer.slice(offset, end), 0);\n  };\n}\n","import { BitcodecItem } from \"../models/BitcodecItem\";\nimport { IBitcodec } from \"../models/IBitcodec\";\n\nexport class CObject implements IBitcodec<object> {\n  private items: { name: string; type: IBitcodec<any> }[];\n\n  encodeBytes: number;\n  decodeBytes: number;\n  encodingLength: (t?: object) => number;\n\n  constructor(items: BitcodecItem[]) {\n    this.items = items.map((item: BitcodecItem) => (Array.isArray(item) ? { name: item[0], type: item[1] } : item));\n\n    this.encodeBytes = 0;\n    this.decodeBytes = 0;\n\n    this.encodingLength = (o?: object): number => {\n      if (o === undefined) throw new TypeError(\"Expected Object, got \" + o);\n      return this.items.reduce((previousValue: number, currentValue: { name: string; type: IBitcodec<any> }) => {\n        const value = (o as any)[currentValue.name];\n        return previousValue + currentValue.type.encodingLength(value);\n      }, 0);\n    };\n  }\n\n  encode = (object: object, buffer?: Buffer, offset = 0): Buffer => {\n    const bytes = this.encodingLength(object);\n    if (buffer === undefined) buffer = Buffer.allocUnsafe(bytes);\n    else if (buffer.length - offset < bytes) throw new RangeError(\"destination buffer is too small\");\n\n    this.items.forEach((item) => {\n      const value = (object as any)[item.name];\n      item.type.encode(value, buffer, offset);\n      offset += item.type.encodeBytes;\n    });\n    this.encodeBytes = bytes;\n    return buffer;\n  };\n\n  decode = (buffer: Buffer, offset: number = 0, end?: number | undefined): object => {\n    let result = {};\n    const start = offset;\n\n    this.items.forEach((item) => {\n      const value = item.type.decode(buffer, offset, end);\n      offset += item.type.decodeBytes;\n      (result as any)[item.name] = value;\n    });\n    this.decodeBytes = offset - start;\n\n    return result;\n  };\n}\n","import { EncodingType } from \"../models/EncodingType\";\nimport { IBitcodec } from \"../models/IBitcodec\";\nimport { CBuffer } from \"./CBuffer\";\n\nexport class CString implements IBitcodec<string> {\n  private length: number;\n  private bufferCodec: IBitcodec<Buffer>;\n  private encodingType: EncodingType;\n\n  encodingLength: (value?: string) => number;\n\n  encodeBytes: number;\n  decodeBytes: number;\n\n  constructor(length: number, encodingType: EncodingType = \"utf8\") {\n    this.length = length;\n    this.encodingType = encodingType;\n    this.bufferCodec = new CBuffer(this.length);\n\n    this.encodeBytes = length;\n    this.decodeBytes = length;\n\n    this.encodingLength = (value?: string) => this.length;\n  }\n\n  encode = (value: string, buffer?: Buffer, offset = 0): Buffer => {\n    if (Buffer.byteLength(value, this.encodingType) !== this.length) throw new RangeError(\"value.length is out of bounds\");\n    if (!buffer) return Buffer.from(value, this.encodingType);\n    if (offset + this.length > buffer.length) throw new RangeError(\"destination buffer is too small\");\n\n    buffer.write(value, offset, length, this.encodingType);\n    return buffer;\n  };\n\n  decode = (buffer: Buffer, offset = 0, end?: number): string => this.bufferCodec.decode(buffer, offset, end).toString(this.encodingType);\n}\n","import * as util from \"../util\";\nimport { IBitcodec } from \"../models/IBitcodec\";\nimport { CBuffer } from \"./CBuffer\";\n\nexport class CVarArray implements IBitcodec<any[]> {\n  private length: number = -1;\n  private lengthType: IBitcodec<any>;\n  private anyCodec: IBitcodec<any>;\n\n  private calcLength = (items: any[]) => {\n    return util.size(items, this.anyCodec.encodingLength, this.lengthType.encodingLength(items.length));\n  };\n\n  encodingLength = (array?: any[]): number => {\n    if (array === undefined) throw new TypeError(\"value must be an Array instance\");\n    return this.calcLength(array);\n  };\n\n  encodeBytes: number = -1;\n  decodeBytes: number = -1;\n\n  constructor(lengthType: IBitcodec<any>, anyCodec: IBitcodec<any>) {\n    this.lengthType = lengthType;\n    this.anyCodec = anyCodec;\n  }\n\n  encode = (value: any[], buffer?: Buffer, offset = 0): Buffer => {\n    if (!buffer) buffer = Buffer.allocUnsafe(this.calcLength(value));\n\n    this.lengthType.encode(value.length, buffer, offset);\n\n    /* this.encodeBytes =\n      value.reduce((previusValue, currentItem, _) => {\n        this.anyCodec.encode(currentItem, buffer, previusValue);\n        const newAnyCodecEncodeBytes = this.anyCodec.encodeBytes;\n        return previusValue + newAnyCodecEncodeBytes;\n      }, this.lengthType.encodeBytes + offset) - offset; */\n\n    this.encodeBytes =\n      util.size(\n        value,\n        (item, index, loffset) => {\n          this.anyCodec.encode(item, buffer, loffset);\n          return this.anyCodec.encodeBytes;\n        },\n        this.lengthType.encodeBytes + offset\n      ) - offset;\n\n    return buffer;\n  };\n\n  decode = (buffer: Buffer, offset = 0, end?: number): any[] => {\n    if (!offset) offset = 0;\n    const items = new Array(this.lengthType.decode(buffer, offset, end));\n\n    /* this.decodeBytes =\n      items.reduce((previusValue, currentItem, currentIndex) => {\n        items[currentIndex] = this.anyCodec.decode(buffer, previusValue, end);\n        const newAnyCodecDecodeBytes = this.anyCodec.decodeBytes;\n        return previusValue + newAnyCodecDecodeBytes;\n      }, this.lengthType.decodeBytes + offset) - offset; */\n\n    this.decodeBytes =\n      util.size(\n        items,\n        (item, index, loffset) => {\n          items[index || 0] = this.anyCodec.decode(buffer, loffset, end);\n          return this.anyCodec.decodeBytes;\n        },\n        this.lengthType.decodeBytes + offset\n      ) - offset;\n    return items;\n  };\n}\n","import { IBitcodec } from \"../models/IBitcodec\";\n\nexport class CVarBuffer implements IBitcodec<any> {\n  private anyCodec: IBitcodec<any>;\n  encodingLength: (buffer?: Buffer) => number;\n\n  encodeBytes: number;\n  decodeBytes: number;\n\n  constructor(anyCodec: IBitcodec<any>) {\n    this.anyCodec = anyCodec;\n    this.encodeBytes = 0;\n    this.decodeBytes = 0;\n\n    this.encodingLength = (buffer?: Buffer) => {\n      if (buffer === undefined) throw new TypeError(\"value must be a Buffer instance\"); // for CArray encode iter\n      return this.anyCodec.encodingLength(buffer.length) + buffer.length;\n    };\n  }\n\n  encode = (value: Buffer, buffer?: Buffer, offset = 0): Buffer => {\n    const bytes = this.encodingLength(value);\n    if (!buffer) buffer = Buffer.allocUnsafe(bytes);\n    else if (buffer.length - offset < bytes) throw new RangeError(\"destination buffer is too small\");\n\n    this.anyCodec.encode(value.length, buffer, offset);\n    offset += this.anyCodec.encodeBytes;\n\n    value.copy(buffer, offset);\n    this.encodeBytes = bytes;\n\n    return buffer;\n  };\n\n  decode = (buffer: Buffer, offset = 0, end?: number): Buffer => {\n    if (end === undefined) end = buffer.length;\n    const start = offset;\n\n    const length = this.anyCodec.decode(buffer, offset, end);\n    offset += this.anyCodec.decodeBytes;\n\n    if (offset + length > end) throw new RangeError(\"not enough data for decode\");\n\n    this.decodeBytes = offset + length - start;\n    return Buffer.from(buffer.slice(offset, offset + length));\n  };\n}\n","import { EncodingType } from \"../models/EncodingType\";\nimport { IBitcodec } from \"../models/IBitcodec\";\nimport { CVarBuffer } from \"./CVarBuffer\";\n\nexport class CVarString implements IBitcodec<string> {\n  private anyCodec: IBitcodec<any>;\n  private encodingType: EncodingType;\n  private varBufferCodec: CVarBuffer;\n  encodingLength: (value?: string) => number;\n\n  encodeBytes: number;\n  decodeBytes: number;\n\n  constructor(anyCodec: IBitcodec<any>, encodingType: EncodingType = \"utf8\") {\n    this.anyCodec = anyCodec;\n    this.encodingType = encodingType;\n    this.varBufferCodec = new CVarBuffer(anyCodec);\n\n    this.encodeBytes = 0;\n    this.decodeBytes = 0;\n\n    this.encodingLength = (value?: string) => {\n      if (value === undefined) throw new TypeError(\"value must be a string\");\n      const valueLength = Buffer.byteLength(value, this.encodingType);\n      return this.anyCodec.encodingLength(value.length) + valueLength;\n    };\n  }\n\n  encode = (value: string, buffer?: Buffer, offset = 0): Buffer => {\n    const valueLength = Buffer.byteLength(value, this.encodingType);\n    const bytes = this.anyCodec.encodingLength(value.length) + valueLength;\n\n    if (!buffer) buffer = Buffer.allocUnsafe(bytes);\n    if (offset + bytes > buffer.length) throw new RangeError(\"destination buffer is too small\");\n\n    this.anyCodec.encode(valueLength, buffer, offset);\n    offset += this.anyCodec.encodeBytes;\n    buffer.write(value, offset, valueLength, this.encodingType);\n\n    this.encodeBytes = bytes;\n    return buffer;\n  };\n\n  decode = (buffer: Buffer, offset = 0, end?: number): string => {\n    const str = this.varBufferCodec.decode(buffer, offset, end).toString(this.encodingType);\n    this.decodeBytes = this.varBufferCodec.decodeBytes;\n    return str;\n  };\n}\n","import { IBitcodec } from \"../models/IBitcodec\";\n\nexport class CVarUIntBitcoin implements IBitcodec<number> {\n  private MAX_SAFE_INTEGER: number = 9007199254740991;\n\n  private checkUInt53 = (n: number) => {\n    if (n < 0 || n > this.MAX_SAFE_INTEGER || n % 1 !== 0) throw new RangeError(\"value out of range\");\n  };\n\n  encodeBytes: number;\n  decodeBytes: number;\n  encodingLength: (t?: number | undefined) => number;\n\n  constructor() {\n    this.encodeBytes = 0;\n    this.decodeBytes = 0;\n    this.encodingLength = (number?: number) => {\n      if (number === undefined) throw new TypeError(\"Expected number, got undefined\");\n      this.checkUInt53(number);\n      return number < 0xfd ? 1 : number <= 0xffff ? 3 : number <= 0xffffffff ? 5 : 9;\n    };\n  }\n\n  encode = (value: number, buffer?: Buffer, offset: number = 0): Buffer => {\n    if (!buffer) buffer = Buffer.allocUnsafe(this.encodingLength(value));\n\n    // 8 bit\n    if (value < 0xfd) {\n      buffer.writeUInt8(value, offset);\n      this.encodeBytes = 1;\n\n      // 16 bit\n    } else if (value <= 0xffff) {\n      buffer.writeUInt8(0xfd, offset);\n      buffer.writeUInt16LE(value, offset + 1);\n      this.encodeBytes = 3;\n\n      // 32 bit\n    } else if (value <= 0xffffffff) {\n      buffer.writeUInt8(0xfe, offset);\n      buffer.writeUInt32LE(value, offset + 1);\n      this.encodeBytes = 5;\n\n      // 64 bit\n    } else {\n      buffer.writeUInt8(0xff, offset);\n      buffer.writeUInt32LE(value >>> 0, offset + 1);\n      buffer.writeUInt32LE((value / 0x100000000) | 0, offset + 5);\n      this.encodeBytes = 9;\n    }\n\n    return buffer;\n  };\n\n  decode = (buffer: Buffer, offset: number = 0, end?: number): number => {\n    const first = buffer.readUInt8(offset);\n\n    // 8 bit\n    if (first < 0xfd) {\n      this.decodeBytes = 1;\n      return first;\n\n      // 16 bit\n    } else if (first === 0xfd) {\n      this.decodeBytes = 3;\n      return buffer.readUInt16LE(offset + 1);\n\n      // 32 bit\n    } else if (first === 0xfe) {\n      this.decodeBytes = 5;\n      return buffer.readUInt32LE(offset + 1);\n\n      // 64 bit\n    } else {\n      this.decodeBytes = 9;\n      var lo = buffer.readUInt32LE(offset + 1);\n      var hi = buffer.readUInt32LE(offset + 5);\n      var number = hi * 0x0100000000 + lo;\n      this.checkUInt53(number);\n\n      return number;\n    }\n  };\n}\n","export enum NumberTypes {\n  Byte = \"UInt8\",\n  Int8 = \"Int8\",\n  UInt8 = \"UInt8\",\n  Int16BE = \"Int16BE\",\n  Int16LE = \"Int16LE\",\n  UInt16BE = \"UInt16BE\",\n  UInt16LE = \"UInt16LE\",\n  Int32BE = \"Int32BE\",\n  Int32LE = \"Int32LE\",\n  UInt32BE = \"UInt32BE\",\n  UInt32LE = \"UInt32LE\",\n  Int64BE = \"Int64BE\",\n  Int64LE = \"Int64LE\",\n  UInt64BE = \"UInt64BE\",\n  UInt64LE = \"UInt64LE\",\n  FloatBE = \"FloatBE\",\n  FloatLE = \"FloatLE\",\n  DoubleBE = \"DoubleBE\",\n  DoubleLE = \"DoubleLE\",\n}\n","export const size = <T>(items: T[], iter: (item?: T, index?: number, ac?: number) => number, acc: number = 0) => {\n  let result = acc;\n  for (let i = 0; i < items.length; i++) result += iter(items[i], i, result);\n  return result;\n\n  /* return items.reduce((previusValue, currentItem, currentIndex) => {\n    return previusValue + iter(items[currentIndex], currentIndex, previusValue);\n  }, acc); */\n};\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// import { MessageCommandCodec } from \"./bitcoin/MessageCommandCodec\";\nimport { MessageHeaderCodec } from \"./bitcoin/MessageHeaderCodec\";\nimport { VersionCodec } from \"./bitcoin/VersionCodec\";\nimport { TxCodec } from \"./bitcoin/TxCodec\";\n/* import { BlockHeaderCodec } from \"./bitcoin/BlockHeaderCodec\";\nimport { BlockCodec } from \"./bitcoin/BlockCodec\"; */\n\n// const CommandCodec = new MessageCommandCodec();\nconst HeaderCodec = MessageHeaderCodec;\n\nexport { /* BlockCodec, BlockHeaderCodec, */ HeaderCodec, VersionCodec, TxCodec };\n"],"names":["Object","defineProperty","exports","value","toDouble","intHighLow","uintHighLow","onesComplement","assert","Int53Type","MAX_UINT32","test","message","Error","number","Math","floor","high","signbit","low","hl","signed","readInt53","writeInt53","common_1","enumerable","get","write_1","write","read_1","read","int53Type","buffer","offset","BE","endsWith","readUInt32BE","readUInt32LE","startsWith","writeUInt32BE","writeUInt32LE","byteLength","b64","lens","getLens","validLen","placeHoldersLen","toByteArray","tmp","i","arr","Arr","_byteLength","curByte","len","revLookup","charCodeAt","fromByteArray","uint8","length","extraBytes","parts","maxChunkLength","len2","push","encodeChunk","lookup","join","Uint8Array","Array","code","indexOf","start","end","num","output","base64","ieee754","customInspectSymbol","Symbol","Buffer","SlowBuffer","alloc","INSPECT_MAX_BYTES","K_MAX_LENGTH","createBuffer","RangeError","buf","setPrototypeOf","prototype","arg","encodingOrOffset","TypeError","allocUnsafe","from","string","encoding","isEncoding","actual","slice","fromString","ArrayBuffer","isView","arrayView","isInstance","copy","fromArrayBuffer","byteOffset","fromArrayLike","fromArrayView","SharedArrayBuffer","valueOf","b","obj","isBuffer","checked","undefined","numberIsNaN","type","isArray","data","fromObject","toPrimitive","assertSize","size","array","toString","mustMatch","arguments","loweredCase","utf8ToBytes","base64ToBytes","toLowerCase","slowToString","this","hexSlice","utf8Slice","asciiSlice","latin1Slice","base64Slice","utf16leSlice","swap","n","m","bidirectionalIndexOf","val","dir","arrayIndexOf","call","lastIndexOf","indexSize","arrLength","valLength","String","readUInt16BE","foundIndex","found","j","hexWrite","Number","remaining","strLen","parsed","parseInt","substr","utf8Write","blitBuffer","asciiWrite","str","byteArray","asciiToBytes","base64Write","ucs2Write","units","c","hi","lo","utf16leToBytes","min","res","firstByte","codePoint","bytesPerSequence","secondByte","thirdByte","fourthByte","tempCodePoint","codePoints","MAX_ARGUMENTS_LENGTH","fromCharCode","apply","decodeCodePointsArray","kMaxLength","TYPED_ARRAY_SUPPORT","proto","foo","e","typedArraySupport","console","error","poolSize","fill","allocUnsafeSlow","_isBuffer","compare","a","x","y","concat","list","pos","set","swap16","swap32","swap64","toLocaleString","equals","inspect","max","replace","trim","target","thisStart","thisEnd","thisCopy","targetCopy","includes","isFinite","toJSON","_arr","ret","out","hexSliceLookupTable","bytes","checkOffset","ext","checkInt","wrtBigUInt64LE","checkIntBI","BigInt","wrtBigUInt64BE","checkIEEE754","writeFloat","littleEndian","noAssert","writeDouble","newBuf","subarray","readUintLE","readUIntLE","mul","readUintBE","readUIntBE","readUint8","readUInt8","readUint16LE","readUInt16LE","readUint16BE","readUint32LE","readUint32BE","readBigUInt64LE","defineBigIntMethod","validateNumber","first","last","boundsError","readBigUInt64BE","readIntLE","pow","readIntBE","readInt8","readInt16LE","readInt16BE","readInt32LE","readInt32BE","readBigInt64LE","readBigInt64BE","readFloatLE","readFloatBE","readDoubleLE","readDoubleBE","writeUintLE","writeUIntLE","writeUintBE","writeUIntBE","writeUint8","writeUInt8","writeUint16LE","writeUInt16LE","writeUint16BE","writeUInt16BE","writeUint32LE","writeUint32BE","writeBigUInt64LE","writeBigUInt64BE","writeIntLE","limit","sub","writeIntBE","writeInt8","writeInt16LE","writeInt16BE","writeInt32LE","writeInt32BE","writeBigInt64LE","writeBigInt64BE","writeFloatLE","writeFloatBE","writeDoubleLE","writeDoubleBE","targetStart","copyWithin","errors","E","sym","getMessage","Base","constructor","super","writable","configurable","name","stack","addNumericalSeparator","range","ERR_OUT_OF_RANGE","checkBounds","ERR_INVALID_ARG_TYPE","ERR_BUFFER_OUT_OF_BOUNDS","input","msg","received","isInteger","abs","INVALID_BASE64_RE","Infinity","leadSurrogate","split","base64clean","src","dst","alphabet","table","i16","fn","BufferBigIntNotDefined","isLE","mLen","nBytes","eLen","eMax","eBias","nBits","d","s","NaN","rt","isNaN","log","LN2","ip","os","toBuffer","buff","result","isV4Format","map","byte","isV6Format","sections","v4Buffer","splice","unshift","argv","word","ipv4Regex","ipv6Regex","_normalizeFamily","family","fromPrefixLen","prefixlen","bits","mask","addr","cidr","cidrString","cidrParts","subnet","networkAddress","toLong","maskBuffer","maskLength","octet","numberOfAddresses","fromLong","firstAddress","lastAddress","broadcastAddress","subnetMask","subnetMaskLength","numHosts","contains","other","cidrSubnet","not","or","isEqual","t","isPrivate","isPublic","isLoopback","loopback","address","all","interfaces","networkInterfaces","filter","details","keys","nic","addresses","Boolean","ipl","forEach","endianness","hostname","location","loadavg","uptime","freemem","MAX_VALUE","totalmem","cpus","release","navigator","appVersion","getNetworkInterfaces","arch","platform","tmpdir","tmpDir","EOL","homedir","BooleanCodec","byteCodec","UInt8","encodeBytes","decodeBytes","encodingLength","encode","decode","IPV4_PREFIX","buffer12","bvalue","nvalue","stop","_MessageHeaderCodec","UInt32LE","MessageCommandCodec","AllBuffer","MessageHeaderCodec","hex","buffer2hex","hex2buffer","TxCodec","txObject","txObjectHex","resultBuffer","marker","Tx","witnessLocktimeCodec","WitnessLocktimeCodec","txIn","witnessArray","txi","witnessScripts","witnessLocktimeHexBuffer","witnessScriptsArray","lockTime","witnessLocktimeHex","txSegwitBase","toTxSegwitBase","TxWitnessBase","txHex","txBuffer","txWitnessBaseBuffer","txWitnessBase","witnessLocktimeDataBuffer","witnessScripts_lockTime","witnessLocktimeData","txSegwitParsed","version","flag","txOut","toTxSegwit","IpCodec","UInt16BE","VersionCodec","UInt64LE","VarString","VarUIntBitcoin","Int32LE","VarArray","VarBuffer","inputsCount","inputCountHex","padStart","bufferHex","newBuffer","txSegwit","index","previousOutput","signatureScript","sequence","toTxSegwitParsed","isHex","k","txVersion","txInItemPreviousOutput","txInItem","txOutItem","txLockTime","Byte","blockHeader","CAllBuffer","anyCodec","CArray","CBuffer","CNumber","NumberTypes","Int8","Int16BE","Int16LE","UInt16LE","Int32BE","UInt32BE","Int64BE","Int64LE","UInt64BE","FloatBE","FloatLE","DoubleBE","DoubleLE","items","CObject","encodingType","CString","lengthType","CVarArray","CVarBuffer","CVarString","CVarUIntBitcoin","calcLength","util","typeEncode","typeEncodeBytes","item","loffset","typeDecode","typeDecodeBytes","numberType","o","reduce","previousValue","currentValue","object","bufferCodec","varBufferCodec","valueLength","MAX_SAFE_INTEGER","checkUInt53","iter","acc","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","module","__webpack_modules__","HeaderCodec"],"sourceRoot":""}
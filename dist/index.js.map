{"version":3,"file":"index.js","mappings":"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","sources":["webpack://[name]/./node_modules/@bitmatrix/int53/common.js","webpack://[name]/./node_modules/@bitmatrix/int53/index.js","webpack://[name]/./node_modules/@bitmatrix/int53/read.js","webpack://[name]/./node_modules/@bitmatrix/int53/write.js","webpack://[name]/./src/lib/CAllBuffer.ts","webpack://[name]/./src/lib/CArray.ts","webpack://[name]/./src/lib/CBuffer.ts","webpack://[name]/./src/lib/CNumber.ts","webpack://[name]/./src/lib/CObject.ts","webpack://[name]/./src/lib/CString.ts","webpack://[name]/./src/lib/CVarArray.ts","webpack://[name]/./src/lib/CVarBuffer.ts","webpack://[name]/./src/lib/CVarString.ts","webpack://[name]/./src/lib/CVarUIntBitcoin.ts","webpack://[name]/./src/models/NumberTypes.ts","webpack://[name]/./src/util.ts","webpack://[name]/webpack/bootstrap","webpack://[name]/./src/index.ts"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.toDouble = exports.intHighLow = exports.uintHighLow = exports.onesComplement = exports.assert = exports.Int53Type = void 0;\nconst MAX_UINT32 = 0x00000000ffffffff;\nconst MAX_INT53 = 0x001fffffffffffff;\nvar Int53Type;\n(function (Int53Type) {\n    Int53Type[\"Int64BE\"] = \"Int64BE\";\n    Int53Type[\"Int64LE\"] = \"Int64LE\";\n    Int53Type[\"UInt64BE\"] = \"UInt64BE\";\n    Int53Type[\"UInt64LE\"] = \"UInt64LE\";\n})(Int53Type = exports.Int53Type || (exports.Int53Type = {}));\nconst assert = (test, message) => {\n    if (!test)\n        throw new Error(message);\n};\nexports.assert = assert;\nconst onesComplement = (number) => {\n    number = ~number;\n    if (number < 0) {\n        number = (number & 0x7fffffff) + 0x80000000;\n    }\n    return number;\n};\nexports.onesComplement = onesComplement;\nconst uintHighLow = (number) => {\n    (0, exports.assert)(number > -1 && number <= MAX_INT53, \"number out of range\");\n    (0, exports.assert)(Math.floor(number) === number, \"number must be an integer\");\n    var high = 0;\n    var signbit = number & 0xffffffff;\n    var low = signbit < 0 ? (number & 0x7fffffff) + 0x80000000 : signbit;\n    if (number > MAX_UINT32) {\n        high = (number - low) / (MAX_UINT32 + 1);\n    }\n    return [high, low];\n};\nexports.uintHighLow = uintHighLow;\nconst intHighLow = (number) => {\n    if (number > -1) {\n        return (0, exports.uintHighLow)(number);\n    }\n    var hl = (0, exports.uintHighLow)(-number);\n    var high = (0, exports.onesComplement)(hl[0]);\n    var low = (0, exports.onesComplement)(hl[1]);\n    if (low === MAX_UINT32) {\n        high += 1;\n        low = 0;\n    }\n    else {\n        low += 1;\n    }\n    return [high, low];\n};\nexports.intHighLow = intHighLow;\nconst toDouble = (high, low, signed) => {\n    if (signed && (high & 0x80000000) !== 0) {\n        high = (0, exports.onesComplement)(high);\n        low = (0, exports.onesComplement)(low);\n        (0, exports.assert)(high < 0x00200000, \"number too small\");\n        return -(high * (MAX_UINT32 + 1) + low + 1);\n    }\n    else {\n        //positive\n        (0, exports.assert)(high < 0x00200000, \"number too large\");\n        return high * (MAX_UINT32 + 1) + low;\n    }\n};\nexports.toDouble = toDouble;\n//# sourceMappingURL=common.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.readInt53 = exports.writeInt53 = exports.Int53Type = void 0;\nvar common_1 = require(\"./common\");\nObject.defineProperty(exports, \"Int53Type\", { enumerable: true, get: function () { return common_1.Int53Type; } });\nvar write_1 = require(\"./write\");\nObject.defineProperty(exports, \"writeInt53\", { enumerable: true, get: function () { return write_1.write; } });\nvar read_1 = require(\"./read\");\nObject.defineProperty(exports, \"readInt53\", { enumerable: true, get: function () { return read_1.read; } });\n//# sourceMappingURL=index.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.read = void 0;\nconst common_1 = require(\"./common\");\nconst read = (int53Type, buffer, offset = 0) => {\n    const BE = int53Type.endsWith(\"BE\");\n    const [high, low] = BE ? [buffer.readUInt32BE(offset), buffer.readUInt32BE(offset + 4)] : [buffer.readUInt32LE(offset + 4), buffer.readUInt32LE(offset)];\n    const signed = int53Type.startsWith(\"Int\");\n    return (0, common_1.toDouble)(high, low, signed);\n};\nexports.read = read;\n//# sourceMappingURL=read.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.write = void 0;\nconst common_1 = require(\"./common\");\nconst write = (int53Type, number, buffer, offset = 0) => {\n    const signed = int53Type.startsWith(\"Int\");\n    const hl = signed ? (0, common_1.intHighLow)(number) : (0, common_1.uintHighLow)(number);\n    const BE = int53Type.endsWith(\"BE\");\n    if (BE) {\n        buffer.writeUInt32BE(hl[0], offset);\n        buffer.writeUInt32BE(hl[1], offset + 4);\n    }\n    else {\n        buffer.writeUInt32LE(hl[1], offset);\n        buffer.writeUInt32LE(hl[0], offset + 4);\n    }\n};\nexports.write = write;\n//# sourceMappingURL=write.js.map","import { IBitcodec } from \"../models/IBitcodec\";\n\nexport class CAllBuffer implements IBitcodec<Buffer> {\n  private length: number;\n  encodingLength = (): number => this.length;\n\n  encodeBytes: number;\n  decodeBytes: number;\n\n  constructor() {\n    this.length = 0;\n    this.encodeBytes = 0;\n    this.decodeBytes = 0;\n  }\n\n  encode = (value: Buffer, buffer?: Buffer, offset = 0): Buffer => {\n    if (!Buffer.isBuffer(value)) throw new TypeError(\"value must be a Buffer instance\"); // for CArray encode iter\n    this.length = value.length - offset;\n    if (!buffer) return Buffer.from(value);\n    if (offset + this.length > buffer.length) throw new RangeError(\"destination buffer is too small\");\n    value.copy(buffer, offset);\n    return buffer;\n  };\n\n  decode = (buffer: Buffer, offset = 0, end?: number): Buffer => {\n    if (!end) end = buffer.length;\n    this.length = buffer.length - offset;\n    if (offset + this.length > end) throw new RangeError(\"not enough data for decode\");\n    return Buffer.from(buffer.slice(offset, offset + this.length));\n  };\n}\n","import * as util from \"../util\";\nimport { IBitcodec } from \"../models/IBitcodec\";\nimport { CBuffer } from \"./CBuffer\";\n\nexport class CArray implements IBitcodec<any[]> {\n  private length: number;\n  private anyCodec: IBitcodec<any>;\n\n  private calcLength = (items: any[]) => {\n    return util.size(items, this.anyCodec.encodingLength);\n  };\n\n  encodingLength = (array?: any[]): number => {\n    if (array === undefined) throw new TypeError(\"value must be an Array instance\");\n    if (array.length !== this.length) throw new RangeError(\"value.length is out of bounds\");\n    return this.calcLength(array);\n  };\n\n  encodeBytes: number;\n  decodeBytes: number;\n\n  constructor(length: number, anyCodec: IBitcodec<any>) {\n    this.length = length;\n    this.anyCodec = anyCodec;\n    this.encodeBytes = length;\n    this.decodeBytes = length;\n  }\n\n  encode = (value: any[], buffer?: Buffer, offset = 0): Buffer => {\n    if (value.length !== this.length) throw new RangeError(\"value.length is out of bounds\");\n    if (!buffer) buffer = Buffer.allocUnsafe(this.calcLength(value));\n\n    const typeEncode = this.anyCodec.encode;\n    const typeEncodeBytes = this.anyCodec.encodeBytes;\n\n    /* this.encodeBytes =\n      value.reduce((previusValue, currentItem, _) => {\n        this.anyCodec.encode(currentItem, buffer, previusValue);\n        const newAnyCodecEncodeBytes = this.anyCodec.encodeBytes;\n        return previusValue + newAnyCodecEncodeBytes;\n      }, offset) - offset; */\n\n    this.encodeBytes =\n      util.size(\n        value,\n        function (item, index, loffset) {\n          typeEncode(item, buffer, loffset);\n          return typeEncodeBytes;\n        },\n        offset\n      ) - offset;\n    return buffer;\n  };\n\n  decode = (buffer: Buffer, offset = 0, end?: number): any[] => {\n    if (!offset) offset = 0;\n    const items = new Array(this.length);\n\n    const typeDecode = this.anyCodec.decode;\n    const typeDecodeBytes = this.anyCodec.decodeBytes;\n\n    /* this.decodeBytes =\n      items.reduce((previusValue, currentItem, currentIndex) => {\n        items[currentIndex] = this.anyCodec.decode(buffer, previusValue, end);\n        const newAnyCodecDecodeBytes = this.anyCodec.decodeBytes;\n        return previusValue + newAnyCodecDecodeBytes;\n      }, offset + offset) - offset; */\n\n    this.decodeBytes =\n      util.size(\n        items,\n        function (item, index, loffset) {\n          items[index || 0] = typeDecode(buffer, loffset, end);\n          return typeDecodeBytes;\n        },\n        offset\n      ) - offset;\n    return items;\n  };\n}\n","import { IBitcodec } from \"../models/IBitcodec\";\n\nexport class CBuffer implements IBitcodec<Buffer> {\n  private length: number;\n  encodingLength = (): number => this.length;\n\n  encodeBytes: number;\n  decodeBytes: number;\n\n  constructor(length: number) {\n    this.length = length;\n    this.encodeBytes = length;\n    this.decodeBytes = length;\n  }\n\n  encode = (value: Buffer, buffer?: Buffer, offset = 0): Buffer => {\n    if (!Buffer.isBuffer(value)) throw new TypeError(\"value must be a Buffer instance\"); // for CArray encode iter\n    if (value.length !== this.length) throw new RangeError(\"value.length is out of bounds\");\n    if (!buffer) return Buffer.from(value);\n    if (offset + this.length > buffer.length) throw new RangeError(\"destination buffer is too small\");\n    value.copy(buffer, offset);\n    return buffer;\n  };\n\n  decode = (buffer: Buffer, offset = 0, end?: number): Buffer => {\n    if (!end) end = buffer.length;\n    if (offset + this.length > end) throw new RangeError(\"not enough data for decode\");\n    return Buffer.from(buffer.slice(offset, offset + this.length));\n  };\n}\n","import { Int53Type, readInt53, writeInt53 } from \"@bitmatrix/int53\";\nimport { IBitcodec } from \"../models/IBitcodec\";\nimport { NumberTypes } from \"../models/NumberTypes\";\n\nexport class CNumber implements IBitcodec<number> {\n  private length: number;\n  private write: (buffer: Buffer, value: number, offset?: number) => void;\n  private read: (buffer: Buffer, offset?: number | undefined) => number;\n\n  encodingLength = (): number => this.length;\n\n  encodeBytes: number;\n  decodeBytes: number;\n\n  constructor(numberType: NumberTypes, length: number) {\n    this.length = length;\n    this.encodeBytes = length;\n    this.decodeBytes = length;\n\n    if (Buffer.prototype[\"write\" + numberType]) {\n      this.write = (buffer: Buffer, value: number, offset?: number) => {\n        return (buffer as any)[\"write\" + numberType](value, offset);\n      };\n    } else {\n      this.write = (buffer: Buffer, value: number, offset?: number) => {\n        return writeInt53(numberType as unknown as Int53Type, value, buffer, offset);\n      };\n    }\n\n    if (Buffer.prototype[\"read\" + numberType]) {\n      this.read = (buffer: Buffer, offset?: number) => {\n        return (buffer as any)[\"read\" + numberType](offset);\n      };\n    } else {\n      this.read = (buffer: Buffer, offset?: number) => {\n        return readInt53(numberType as unknown as Int53Type, buffer, offset);\n      };\n    }\n  }\n\n  encode = (value: number, buffer?: Buffer, offset = 0): Buffer => {\n    buffer = buffer || Buffer.allocUnsafe(this.length);\n\n    this.write(buffer, value, offset);\n    return buffer;\n  };\n\n  decode = (buffer: Buffer, offset = 0, end?: number): number => {\n    if (!end) return this.read(buffer, offset);\n    return this.read(buffer.slice(offset, end), 0);\n  };\n}\n","import { BitcodecItem } from \"../models/BitcodecItem\";\nimport { IBitcodec } from \"../models/IBitcodec\";\n\nexport class CObject implements IBitcodec<object> {\n  private items: { name: string; type: IBitcodec<any> }[];\n\n  encodeBytes: number;\n  decodeBytes: number;\n  encodingLength: (t?: object) => number;\n\n  constructor(items: BitcodecItem[]) {\n    this.items = items.map((item: BitcodecItem) => (Array.isArray(item) ? { name: item[0], type: item[1] } : item));\n\n    this.encodeBytes = 0;\n    this.decodeBytes = 0;\n\n    this.encodingLength = (o?: object): number => {\n      if (o === undefined) throw new TypeError(\"Expected Object, got \" + o);\n      return this.items.reduce((previousValue: number, currentValue: { name: string; type: IBitcodec<any> }) => {\n        const value = (o as any)[currentValue.name];\n        return previousValue + currentValue.type.encodingLength(value);\n      }, 0);\n    };\n  }\n\n  encode = (object: object, buffer?: Buffer, offset = 0): Buffer => {\n    const bytes = this.encodingLength(object);\n    if (buffer === undefined) buffer = Buffer.allocUnsafe(bytes);\n    else if (buffer.length - offset < bytes) throw new RangeError(\"destination buffer is too small\");\n\n    this.items.forEach((item) => {\n      const value = (object as any)[item.name];\n      item.type.encode(value, buffer, offset);\n      offset += item.type.encodeBytes;\n    });\n    this.encodeBytes = bytes;\n    return buffer;\n  };\n\n  decode = (buffer: Buffer, offset: number = 0, end?: number | undefined): object => {\n    let result = {};\n    const start = offset;\n\n    this.items.forEach((item) => {\n      const value = item.type.decode(buffer, offset, end);\n      offset += item.type.decodeBytes;\n      (result as any)[item.name] = value;\n    });\n    this.decodeBytes = offset - start;\n\n    return result;\n  };\n}\n","import { EncodingType } from \"../models/EncodingType\";\nimport { IBitcodec } from \"../models/IBitcodec\";\nimport { CBuffer } from \"./CBuffer\";\n\nexport class CString implements IBitcodec<string> {\n  private length: number;\n  private bufferCodec: IBitcodec<Buffer>;\n  private encodingType: EncodingType;\n\n  encodingLength: (value?: string) => number;\n\n  encodeBytes: number;\n  decodeBytes: number;\n\n  constructor(length: number, encodingType: EncodingType = \"utf8\") {\n    this.length = length;\n    this.encodingType = encodingType;\n    this.bufferCodec = new CBuffer(this.length);\n\n    this.encodeBytes = length;\n    this.decodeBytes = length;\n\n    this.encodingLength = (value?: string) => this.length;\n  }\n\n  encode = (value: string, buffer?: Buffer, offset = 0): Buffer => {\n    if (Buffer.byteLength(value, this.encodingType) !== this.length) throw new RangeError(\"value.length is out of bounds\");\n    if (!buffer) return Buffer.from(value, this.encodingType);\n    if (offset + this.length > buffer.length) throw new RangeError(\"destination buffer is too small\");\n\n    buffer.write(value, offset, length, this.encodingType);\n    return buffer;\n  };\n\n  decode = (buffer: Buffer, offset = 0, end?: number): string => this.bufferCodec.decode(buffer, offset, end).toString(this.encodingType);\n}\n","import * as util from \"../util\";\nimport { IBitcodec } from \"../models/IBitcodec\";\nimport { CBuffer } from \"./CBuffer\";\n\nexport class CVarArray implements IBitcodec<any[]> {\n  private length: number = -1;\n  private lengthType: IBitcodec<any>;\n  private anyCodec: IBitcodec<any>;\n\n  private calcLength = (items: any[]) => {\n    return util.size(items, this.anyCodec.encodingLength, this.lengthType.encodingLength(items.length));\n  };\n\n  encodingLength = (array?: any[]): number => {\n    if (array === undefined) throw new TypeError(\"value must be an Array instance\");\n    return this.calcLength(array);\n  };\n\n  encodeBytes: number = -1;\n  decodeBytes: number = -1;\n\n  constructor(lengthType: IBitcodec<any>, anyCodec: IBitcodec<any>) {\n    this.lengthType = lengthType;\n    this.anyCodec = anyCodec;\n  }\n\n  encode = (value: any[], buffer?: Buffer, offset = 0): Buffer => {\n    if (!buffer) buffer = Buffer.allocUnsafe(this.calcLength(value));\n\n    this.lengthType.encode(value.length, buffer, offset);\n\n    /* this.encodeBytes =\n      value.reduce((previusValue, currentItem, _) => {\n        this.anyCodec.encode(currentItem, buffer, previusValue);\n        const newAnyCodecEncodeBytes = this.anyCodec.encodeBytes;\n        return previusValue + newAnyCodecEncodeBytes;\n      }, this.lengthType.encodeBytes + offset) - offset; */\n\n    this.encodeBytes =\n      util.size(\n        value,\n        (item, index, loffset) => {\n          this.anyCodec.encode(item, buffer, loffset);\n          return this.anyCodec.encodeBytes;\n        },\n        this.lengthType.encodeBytes + offset\n      ) - offset;\n\n    return buffer;\n  };\n\n  decode = (buffer: Buffer, offset = 0, end?: number): any[] => {\n    if (!offset) offset = 0;\n    const items = new Array(this.lengthType.decode(buffer, offset, end));\n\n    /* this.decodeBytes =\n      items.reduce((previusValue, currentItem, currentIndex) => {\n        items[currentIndex] = this.anyCodec.decode(buffer, previusValue, end);\n        const newAnyCodecDecodeBytes = this.anyCodec.decodeBytes;\n        return previusValue + newAnyCodecDecodeBytes;\n      }, this.lengthType.decodeBytes + offset) - offset; */\n\n    this.decodeBytes =\n      util.size(\n        items,\n        (item, index, loffset) => {\n          items[index || 0] = this.anyCodec.decode(buffer, loffset, end);\n          return this.anyCodec.decodeBytes;\n        },\n        this.lengthType.decodeBytes + offset\n      ) - offset;\n    return items;\n  };\n}\n","import { IBitcodec } from \"../models/IBitcodec\";\n\nexport class CVarBuffer implements IBitcodec<any> {\n  private anyCodec: IBitcodec<any>;\n  encodingLength: (buffer?: Buffer) => number;\n\n  encodeBytes: number;\n  decodeBytes: number;\n\n  constructor(anyCodec: IBitcodec<any>) {\n    this.anyCodec = anyCodec;\n    this.encodeBytes = 0;\n    this.decodeBytes = 0;\n\n    this.encodingLength = (buffer?: Buffer) => {\n      if (buffer === undefined) throw new TypeError(\"value must be a Buffer instance\"); // for CArray encode iter\n      return this.anyCodec.encodingLength(buffer.length) + buffer.length;\n    };\n  }\n\n  encode = (value: Buffer, buffer?: Buffer, offset = 0): Buffer => {\n    const bytes = this.encodingLength(value);\n    if (!buffer) buffer = Buffer.allocUnsafe(bytes);\n    else if (buffer.length - offset < bytes) throw new RangeError(\"destination buffer is too small\");\n\n    this.anyCodec.encode(value.length, buffer, offset);\n    offset += this.anyCodec.encodeBytes;\n\n    value.copy(buffer, offset);\n    this.encodeBytes = bytes;\n\n    return buffer;\n  };\n\n  decode = (buffer: Buffer, offset = 0, end?: number): Buffer => {\n    if (end === undefined) end = buffer.length;\n    const start = offset;\n\n    const length = this.anyCodec.decode(buffer, offset, end);\n    offset += this.anyCodec.decodeBytes;\n\n    if (offset + length > end) throw new RangeError(\"not enough data for decode\");\n\n    this.decodeBytes = offset + length - start;\n    return Buffer.from(buffer.slice(offset, offset + length));\n  };\n}\n","import { EncodingType } from \"../models/EncodingType\";\nimport { IBitcodec } from \"../models/IBitcodec\";\nimport { CVarBuffer } from \"./CVarBuffer\";\n\nexport class CVarString implements IBitcodec<string> {\n  private anyCodec: IBitcodec<any>;\n  private encodingType: EncodingType;\n  private varBufferCodec: CVarBuffer;\n  encodingLength: (value?: string) => number;\n\n  encodeBytes: number;\n  decodeBytes: number;\n\n  constructor(anyCodec: IBitcodec<any>, encodingType: EncodingType = \"utf8\") {\n    this.anyCodec = anyCodec;\n    this.encodingType = encodingType;\n    this.varBufferCodec = new CVarBuffer(anyCodec);\n\n    this.encodeBytes = 0;\n    this.decodeBytes = 0;\n\n    this.encodingLength = (value?: string) => {\n      if (value === undefined) throw new TypeError(\"value must be a string\");\n      const valueLength = Buffer.byteLength(value, this.encodingType);\n      return this.anyCodec.encodingLength(value.length) + valueLength;\n    };\n  }\n\n  encode = (value: string, buffer?: Buffer, offset = 0): Buffer => {\n    const valueLength = Buffer.byteLength(value, this.encodingType);\n    const bytes = this.anyCodec.encodingLength(value.length) + valueLength;\n\n    if (!buffer) buffer = Buffer.allocUnsafe(bytes);\n    if (offset + bytes > buffer.length) throw new RangeError(\"destination buffer is too small\");\n\n    this.anyCodec.encode(valueLength, buffer, offset);\n    offset += this.anyCodec.encodeBytes;\n    buffer.write(value, offset, valueLength, this.encodingType);\n\n    this.encodeBytes = bytes;\n    return buffer;\n  };\n\n  decode = (buffer: Buffer, offset = 0, end?: number): string => {\n    const str = this.varBufferCodec.decode(buffer, offset, end).toString(this.encodingType);\n    this.decodeBytes = this.varBufferCodec.decodeBytes;\n    return str;\n  };\n}\n","import { IBitcodec } from \"../models/IBitcodec\";\n\nexport class CVarUIntBitcoin implements IBitcodec<number> {\n  private MAX_SAFE_INTEGER: number = 9007199254740991;\n\n  private checkUInt53 = (n: number) => {\n    if (n < 0 || n > this.MAX_SAFE_INTEGER || n % 1 !== 0) throw new RangeError(\"value out of range\");\n  };\n\n  encodeBytes: number;\n  decodeBytes: number;\n  encodingLength: (t?: number | undefined) => number;\n\n  constructor() {\n    this.encodeBytes = 0;\n    this.decodeBytes = 0;\n    this.encodingLength = (number?: number) => {\n      if (number === undefined) throw new TypeError(\"Expected number, got undefined\");\n      this.checkUInt53(number);\n      return number < 0xfd ? 1 : number <= 0xffff ? 3 : number <= 0xffffffff ? 5 : 9;\n    };\n  }\n\n  encode = (value: number, buffer?: Buffer, offset: number = 0): Buffer => {\n    if (!buffer) buffer = Buffer.allocUnsafe(this.encodingLength(value));\n\n    // 8 bit\n    if (value < 0xfd) {\n      buffer.writeUInt8(value, offset);\n      this.encodeBytes = 1;\n\n      // 16 bit\n    } else if (value <= 0xffff) {\n      buffer.writeUInt8(0xfd, offset);\n      buffer.writeUInt16LE(value, offset + 1);\n      this.encodeBytes = 3;\n\n      // 32 bit\n    } else if (value <= 0xffffffff) {\n      buffer.writeUInt8(0xfe, offset);\n      buffer.writeUInt32LE(value, offset + 1);\n      this.encodeBytes = 5;\n\n      // 64 bit\n    } else {\n      buffer.writeUInt8(0xff, offset);\n      buffer.writeUInt32LE(value >>> 0, offset + 1);\n      buffer.writeUInt32LE((value / 0x100000000) | 0, offset + 5);\n      this.encodeBytes = 9;\n    }\n\n    return buffer;\n  };\n\n  decode = (buffer: Buffer, offset: number = 0, end?: number): number => {\n    const first = buffer.readUInt8(offset);\n\n    // 8 bit\n    if (first < 0xfd) {\n      this.decodeBytes = 1;\n      return first;\n\n      // 16 bit\n    } else if (first === 0xfd) {\n      this.decodeBytes = 3;\n      return buffer.readUInt16LE(offset + 1);\n\n      // 32 bit\n    } else if (first === 0xfe) {\n      this.decodeBytes = 5;\n      return buffer.readUInt32LE(offset + 1);\n\n      // 64 bit\n    } else {\n      this.decodeBytes = 9;\n      var lo = buffer.readUInt32LE(offset + 1);\n      var hi = buffer.readUInt32LE(offset + 5);\n      var number = hi * 0x0100000000 + lo;\n      this.checkUInt53(number);\n\n      return number;\n    }\n  };\n}\n","export enum NumberTypes {\n  Byte = \"UInt8\",\n  Int8 = \"Int8\",\n  UInt8 = \"UInt8\",\n  Int16BE = \"Int16BE\",\n  Int16LE = \"Int16LE\",\n  UInt16BE = \"UInt16BE\",\n  UInt16LE = \"UInt16LE\",\n  Int32BE = \"Int32BE\",\n  Int32LE = \"Int32LE\",\n  UInt32BE = \"UInt32BE\",\n  UInt32LE = \"UInt32LE\",\n  Int64BE = \"Int64BE\",\n  Int64LE = \"Int64LE\",\n  UInt64BE = \"UInt64BE\",\n  UInt64LE = \"UInt64LE\",\n  FloatBE = \"FloatBE\",\n  FloatLE = \"FloatLE\",\n  DoubleBE = \"DoubleBE\",\n  DoubleLE = \"DoubleLE\",\n}\n","export const size = <T>(items: T[], iter: (item?: T, index?: number, ac?: number) => number, acc: number = 0) => {\n  let result = acc;\n  for (let i = 0; i < items.length; i++) result += iter(items[i], i, result);\n  return result;\n\n  /* return items.reduce((previusValue, currentItem, currentIndex) => {\n    return previusValue + iter(items[currentIndex], currentIndex, previusValue);\n  }, acc); */\n};\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","import { IBitcodec } from \"./models/IBitcodec\";\nimport { BitcodecItem } from \"./models/BitcodecItem\";\nimport { EncodingType } from \"./models/EncodingType\";\nimport { NumberTypes } from \"./models/NumberTypes\";\n\nimport { CAllBuffer } from \"./lib/CAllBuffer\";\nimport { CArray } from \"./lib/CArray\";\nimport { CBuffer } from \"./lib/CBuffer\";\nimport { CNumber } from \"./lib/CNumber\";\nimport { CObject } from \"./lib/CObject\";\nimport { CString } from \"./lib/CString\";\nimport { CVarArray } from \"./lib/CVarArray\";\nimport { CVarBuffer } from \"./lib/CVarBuffer\";\nimport { CVarString } from \"./lib/CVarString\";\nimport { CVarUIntBitcoin } from \"./lib/CVarUIntBitcoin\";\n\nexport default {\n  AllBuffer: new CAllBuffer(),\n  Array: (length: number, anyCodec: IBitcodec<any>) => new CArray(length, anyCodec),\n  Buffer: (length: number) => new CBuffer(length),\n  Byte: new CNumber(NumberTypes.UInt8, 1),\n  Number: {\n    Int8: new CNumber(NumberTypes.Int8, 1),\n    UInt8: new CNumber(NumberTypes.UInt8, 1),\n    Int16BE: new CNumber(NumberTypes.Int16BE, 2),\n    Int16LE: new CNumber(NumberTypes.Int16LE, 2),\n    UInt16BE: new CNumber(NumberTypes.UInt16BE, 2),\n    UInt16LE: new CNumber(NumberTypes.UInt16LE, 2),\n    Int32BE: new CNumber(NumberTypes.Int32BE, 4),\n    Int32LE: new CNumber(NumberTypes.Int32LE, 4),\n    UInt32BE: new CNumber(NumberTypes.UInt32BE, 4),\n    UInt32LE: new CNumber(NumberTypes.UInt32LE, 4),\n    Int64BE: new CNumber(NumberTypes.Int64BE, 8),\n    Int64LE: new CNumber(NumberTypes.Int64LE, 8),\n    UInt64BE: new CNumber(NumberTypes.UInt64BE, 8),\n    UInt64LE: new CNumber(NumberTypes.UInt64LE, 8),\n    FloatBE: new CNumber(NumberTypes.FloatBE, 4),\n    FloatLE: new CNumber(NumberTypes.FloatLE, 4),\n    DoubleBE: new CNumber(NumberTypes.DoubleBE, 8),\n    DoubleLE: new CNumber(NumberTypes.DoubleLE, 8),\n  },\n  Object: (items: BitcodecItem[]) => new CObject(items),\n  String: (length: number, encodingType: EncodingType = \"utf8\") => new CString(length, encodingType),\n  VarArray: (lengthType: IBitcodec<any>, anyCodec: IBitcodec<any>) => new CVarArray(lengthType, anyCodec),\n  VarBuffer: (anyCodec: IBitcodec<any>) => new CVarBuffer(anyCodec),\n  VarString: (anyCodec: IBitcodec<any>, encodingType: EncodingType = \"utf8\") => new CVarString(anyCodec, encodingType),\n  VarUIntBitcoin: new CVarUIntBitcoin(),\n};\n"],"names":[],"sourceRoot":""}